[
    {
        "id": 0,
        "start": 0.0,
        "end": 12.0,
        "text": " Hello, everyone. Good afternoon. Nope. Oh, hello."
    },
    {
        "id": 1,
        "start": 12.0,
        "end": 14.0,
        "text": " A bleep."
    },
    {
        "id": 2,
        "start": 14.0,
        "end": 34.0,
        "text": " Hello, folks. Good evening. Good afternoon. Good morning, wherever you are around the world. I am Julianna Fajardini and today I'm your host, we will have Lucas Smith, having presenting this April webinar about the PDK support on Suricata."
    },
    {
        "id": 3,
        "start": 34.0,
        "end": 41.0,
        "text": " And before we get started, as usual, few words about Suricata and YSF."
    },
    {
        "id": 4,
        "start": 41.0,
        "end": 60.0,
        "text": " As many of you know, YSF stands for Open Information Security Foundation, and the YSF is a US 501 C3 nonprofit organization that ensures that Suricata remains world class and open source."
    },
    {
        "id": 5,
        "start": 60.0,
        "end": 77.0,
        "text": " We are dedicated to preserving the integrity of open source security technologies and the communities that keep them thriving, and our team and our community includes world class security and nonprofit experts programmers and industry leaders dedicated to open source"
    },
    {
        "id": 6,
        "start": 77.0,
        "end": 80.0,
        "text": " security technologies."
    },
    {
        "id": 7,
        "start": 80.0,
        "end": 95.0,
        "text": " Our team comes from the nations. So if you work for a company that uses Suricata or is interested in integrating Suricata in one of your solutions, please reach out to us."
    },
    {
        "id": 8,
        "start": 95.0,
        "end": 98.0,
        "text": " Maybe you could become a consortium member."
    },
    {
        "id": 9,
        "start": 98.0,
        "end": 112.0,
        "text": " With that said, we have Lucas Smith. He is part of the YSF core team member, as I've mentioned, he's the youngest. I am just a bit older than him in the team."
    },
    {
        "id": 10,
        "start": 112.0,
        "end": 122.0,
        "text": " He is a PhD student at the Faculty of Information Technologies at Brno University of Technology, and a researcher at Cessnet."
    },
    {
        "id": 11,
        "start": 122.0,
        "end": 139.0,
        "text": " He's the contributor of the Suricata 7 DPDK support, which you all are very interested about I'm sure, and he's interested in accelerating Suricata's performance, either through hardware assisted or software based means."
    },
    {
        "id": 12,
        "start": 139.0,
        "end": 149.0,
        "text": " Without any more to say, I pass the word back to you Lucas, have a great presentation and thank you for being here with us today."
    },
    {
        "id": 13,
        "start": 149.0,
        "end": 152.0,
        "text": " All right. Thank you for your introduction."
    },
    {
        "id": 14,
        "start": 152.0,
        "end": 155.0,
        "text": " Hello folks."
    },
    {
        "id": 15,
        "start": 155.0,
        "end": 164.0,
        "text": " Let me share the screen to start off with a presentation."
    },
    {
        "id": 16,
        "start": 164.0,
        "end": 166.0,
        "text": " Right."
    },
    {
        "id": 17,
        "start": 166.0,
        "end": 172.0,
        "text": " Okay."
    },
    {
        "id": 18,
        "start": 172.0,
        "end": 175.0,
        "text": " All right, so today's webinar."
    },
    {
        "id": 19,
        "start": 175.0,
        "end": 187.0,
        "text": " Sorry for interrupting you. It's just one thing that I forgot to say, folks, as usual, we have our Q&A channel so if you have any questions."
    },
    {
        "id": 20,
        "start": 187.0,
        "end": 197.0,
        "text": " Please share them in the Q&A channel and we will make sure to read them and answer by the end of the webinar. Okay. Thank you. I'm sorry."
    },
    {
        "id": 21,
        "start": 197.0,
        "end": 198.0,
        "text": " All right."
    },
    {
        "id": 22,
        "start": 198.0,
        "end": 203.0,
        "text": " Okay. Thank you for. Thank you for your addition."
    },
    {
        "id": 23,
        "start": 203.0,
        "end": 219.0,
        "text": " Today's webinar will be about Suricata and DPDK, and hopefully everything you need to know to have Suricata running with DPDK, even though you don't know much about DPDK."
    },
    {
        "id": 24,
        "start": 219.0,
        "end": 233.0,
        "text": " My name is Lucas Csismic, as Juliana mentioned, I'm the Suricata team member primarily and PhD student as well as research at Cessna."
    },
    {
        "id": 25,
        "start": 233.0,
        "end": 247.0,
        "text": " Today, we will talk about general Suricata overview but I can assume you are probably already, you probably already heard about the Suricata."
    },
    {
        "id": 26,
        "start": 248.0,
        "end": 259.0,
        "text": " So I'll rather introduce you to DPDK, and then we'll just go over some demo that I have prepared."
    },
    {
        "id": 27,
        "start": 259.0,
        "end": 268.0,
        "text": " So, you would essentially, Suricata is a sensor that goes over traffic."
    },
    {
        "id": 28,
        "start": 268.0,
        "end": 279.0,
        "text": " You've probably seen this image before, it's Suricata analyzes the traffic and produces some alerts based on some signatures."
    },
    {
        "id": 29,
        "start": 279.0,
        "end": 298.0,
        "text": " Suricata can not only do that, but it can also monitor traffic, and also export full information, but also extract metadata and files of the traffic so that you have it available for later analysis."
    },
    {
        "id": 30,
        "start": 298.0,
        "end": 309.0,
        "text": " Suricata can also record PCAPs, either triggered by rules, or you can have full packet capture."
    },
    {
        "id": 31,
        "start": 310.0,
        "end": 321.0,
        "text": " With regards to signatures, it can do many different things, how it can detect the signatures within the traffic."
    },
    {
        "id": 32,
        "start": 321.0,
        "end": 340.0,
        "text": " One of those can be, you can also detect different alerts in between flows, so you can have more clients communicating and if you see some weird traffic in between them, you can also raise an alert based on that."
    },
    {
        "id": 33,
        "start": 341.0,
        "end": 358.0,
        "text": " It can also have datasets, and that essentially optimizes the way Suricata is used, but today's webinar will be about how Suricata receives traffic."
    },
    {
        "id": 34,
        "start": 359.0,
        "end": 370.0,
        "text": " But before we'll go into that, I wanted to show you how Suricata actually processes the traffic, what's the architecture of Suricata."
    },
    {
        "id": 35,
        "start": 371.0,
        "end": 387.0,
        "text": " So when you have a Suricata application, in that application you have multiple threads, and those threads are either management threads or packet processing threads."
    },
    {
        "id": 36,
        "start": 388.0,
        "end": 403.0,
        "text": " Packet processing threads are called workers in Suricata, and to these threads, packets are delivered from the network interface."
    },
    {
        "id": 37,
        "start": 406.0,
        "end": 410.0,
        "text": " Now what is happening within that packet processing thread?"
    },
    {
        "id": 38,
        "start": 411.0,
        "end": 430.0,
        "text": " Basically, everything that Suricata does, so when you have one packet processing thread, it contains multiple modules, and within those modules, different things are done."
    },
    {
        "id": 39,
        "start": 431.0,
        "end": 450.0,
        "text": " The first module is the capture module, and an example of a capture module can be af-packet, af-ring, map-map, map-attack, and apdk."
    },
    {
        "id": 40,
        "start": 451.0,
        "end": 460.0,
        "text": " So basically, capture module is how you receive traffic from the, let's say, outside world to your processing thread."
    },
    {
        "id": 41,
        "start": 461.0,
        "end": 477.0,
        "text": " Then, when the packet is received in that capture module, then Suricata passes the packet to the decode module, where the packet is decoded into PON, IP address, UDP, TCP ports, and etc."
    },
    {
        "id": 42,
        "start": 478.0,
        "end": 497.0,
        "text": " Then, when this packet is decoded, it goes through the detection phase, detection module, where it's matched against signatures with IP matching, content matching, and some other fields as well."
    },
    {
        "id": 43,
        "start": 498.0,
        "end": 525.0,
        "text": " And when something is matched, or if, not even if, in network monitoring, it doesn't even require any rules, like the last stage of the processing is the output module, where basically, let's say the flow information is exported to these common output files,"
    },
    {
        "id": 44,
        "start": 526.0,
        "end": 535.0,
        "text": " or the result of the detection phase is exported to these common output files."
    },
    {
        "id": 45,
        "start": 537.0,
        "end": 545.0,
        "text": " But this webinar is really about the capture module and dpdk, so how we receive the traffic."
    },
    {
        "id": 46,
        "start": 547.0,
        "end": 550.0,
        "text": " Now, what is dpdk? It's Data Plane Development Kit."
    },
    {
        "id": 47,
        "start": 550.0,
        "end": 561.0,
        "text": " It's basically, in a very brief term, it's a set of optimized open source libraries to speed up packet processing workloads."
    },
    {
        "id": 48,
        "start": 562.0,
        "end": 566.0,
        "text": " It's an open source project governed by Linux Foundation."
    },
    {
        "id": 49,
        "start": 567.0,
        "end": 572.0,
        "text": " Previously, it was governed by Intel, but then it was passed to Linux Foundation."
    },
    {
        "id": 50,
        "start": 573.0,
        "end": 589.0,
        "text": " Now, contributors to dpdk are all over the world, although the main ones are, I think, Intel, NVIDIA, maybe Marvel, and some folks like that."
    },
    {
        "id": 51,
        "start": 590.0,
        "end": 602.0,
        "text": " Now, if we compare capture modules, AF packet, NetMap, PeerFrame, dpdk, why is dpdk different?"
    },
    {
        "id": 52,
        "start": 603.0,
        "end": 609.0,
        "text": " I think there are two main points, and that is kernel bypass."
    },
    {
        "id": 53,
        "start": 610.0,
        "end": 615.0,
        "text": " In dpdk, the packet doesn't go through the kernel, as we will see."
    },
    {
        "id": 54,
        "start": 616.0,
        "end": 634.0,
        "text": " And the way dpdk receives packets from the NIC is by polling the NIC for new packets, whereas in other capture modules, it's provided by interrupts."
    },
    {
        "id": 55,
        "start": 635.0,
        "end": 637.0,
        "text": " We will go over that as well."
    },
    {
        "id": 56,
        "start": 638.0,
        "end": 643.0,
        "text": " And now, why should you consider using dpdk with Zerocata?"
    },
    {
        "id": 57,
        "start": 644.0,
        "end": 654.0,
        "text": " It's essentially, as I mentioned, it's focused on improving packet processing performance."
    },
    {
        "id": 58,
        "start": 655.0,
        "end": 667.0,
        "text": " And it can add, let's say, up to 20%, but it really depends on the setup and the traffic, on the rules you use, the hardware you have."
    },
    {
        "id": 59,
        "start": 667.0,
        "end": 675.0,
        "text": " So maybe in some cases, it might be even more than 20% of additional performance."
    },
    {
        "id": 60,
        "start": 676.0,
        "end": 688.0,
        "text": " In IDS mode, we don't usually care much about the latency, but dpdk might have another positive effect on performance."
    },
    {
        "id": 61,
        "start": 688.0,
        "end": 697.5200004577637,
        "text": " latency in IPS modes. So compared to standard modes like AF packet, it can reduce latency as well."
    },
    {
        "id": 62,
        "start": 699.1999998092651,
        "end": 710.3199996948242,
        "text": " Now, here I wanted to compare how packets are received by the capture module."
    },
    {
        "id": 63,
        "start": 711.2000007629395,
        "end": 718.7199993133545,
        "text": " AF packet is the kind of the default capture module that you would use with Suricata"
    },
    {
        "id": 64,
        "start": 719.3600006103516,
        "end": 726.7999992370605,
        "text": " and DPDK is the thing that we are talking about today. In AF packet,"
    },
    {
        "id": 65,
        "start": 728.4000015258789,
        "end": 735.5999984741211,
        "text": " which is on the left, you basically see on the top left corner, it receives packets,"
    },
    {
        "id": 66,
        "start": 736.560001373291,
        "end": 744.7999992370605,
        "text": " then the packet is passed to the NIC driver, and as it arrives, the NIC driver pushes the packet"
    },
    {
        "id": 67,
        "start": 744.7999992370605,
        "end": 754.2399978637695,
        "text": " to the buffer. Then this packet is stored within the buffer, but the NIC driver also sends an"
    },
    {
        "id": 68,
        "start": 754.2399978637695,
        "end": 763.5999984741211,
        "text": " interrupt to the CPU core, like, hey, you got a packet in that buffer. Now, once CPU core notices"
    },
    {
        "id": 69,
        "start": 764.2399978637695,
        "end": 772.0,
        "text": " this interrupt, it will call an interrupt handler, which is, I guess, essentially a callback,"
    },
    {
        "id": 70,
        "start": 772.6399993896484,
        "end": 780.3199996948242,
        "text": " which will take that packet of the buffer and push it towards the application."
    },
    {
        "id": 71,
        "start": 781.5999984741211,
        "end": 790.7200012207031,
        "text": " As you can see, all these things are happening in the kernel space. This is very simplified"
    },
    {
        "id": 72,
        "start": 791.5999984741211,
        "end": 799.5999984741211,
        "text": " diagram of what's going on in the kernel. There's a lot more going on in the kernel,"
    },
    {
        "id": 73,
        "start": 800.8000030517578,
        "end": 814.0800018310547,
        "text": " especially within that interrupt handler case, and then packets are delivered to the application."
    },
    {
        "id": 74,
        "start": 814.9599990844727,
        "end": 825.6799926757812,
        "text": " Whereas in DPDK, we essentially bypass the kernel space. Now, how is that possible?"
    },
    {
        "id": 75,
        "start": 827.2799987792969,
        "end": 837.5200042724609,
        "text": " In DPDK, we have special DPDK pole-multiple drivers, which basically"
    },
    {
        "id": 76,
        "start": 838.4799957275391,
        "end": 846.6399993896484,
        "text": " can communicate with the hardware, with the NIC, from the user space. But"
    },
    {
        "id": 77,
        "start": 849.6799926757812,
        "end": 860.7200012207031,
        "text": " these drivers essentially allow us for packets to not go through the kernel space,"
    },
    {
        "id": 78,
        "start": 861.4400024414062,
        "end": 872.4799957275391,
        "text": " but if we would have drivers programmed for different hardware, then our application would"
    },
    {
        "id": 79,
        "start": 872.4799957275391,
        "end": 879.2799987792969,
        "text": " probably be kind of tied to that hardware, and it would be hardly portable. That's why"
    },
    {
        "id": 80,
        "start": 879.2799987792969,
        "end": 889.3600006103516,
        "text": " we have DPDK and kind of a form of abstraction, which kind of divides the operation of the"
    },
    {
        "id": 81,
        "start": 889.3600006103516,
        "end": 899.1199951171875,
        "text": " application and the driver. And in DPDK, we also have an environment abstraction layer, which"
    },
    {
        "id": 82,
        "start": 899.1199951171875,
        "end": 915.6000061035156,
        "text": " does the abstraction for us. It creates an environment for our application to be portable"
    },
    {
        "id": 83,
        "start": 915.8399963378906,
        "end": 924.8000030517578,
        "text": " from one environment to another environment, while also facilitates the communication between"
    },
    {
        "id": 84,
        "start": 924.8000030517578,
        "end": 933.7599945068359,
        "text": " the NIC and the pole-multiple driver. So essentially, we then only work with a special DPDK PMD"
    },
    {
        "id": 85,
        "start": 935.6799926757812,
        "end": 942.0,
        "text": " with our application and don't care about the rest. The pole-multiple driver essentially pulls the"
    },
    {
        "id": 86,
        "start": 942.0,
        "end": 950.0,
        "text": " packet all the time. Our application needs to call this driver every time it wants to receive"
    },
    {
        "id": 87,
        "start": 950.0,
        "end": 959.6000061035156,
        "text": " the packet. And in DPDK, we are always asking NIC, do you have any new packets? And if it does,"
    },
    {
        "id": 88,
        "start": 959.6000061035156,
        "end": 970.3999938964844,
        "text": " then the packets are returned to us. This process is a lot more performant, but also it means that"
    },
    {
        "id": 89,
        "start": 970.3999938964844,
        "end": 979.4400024414062,
        "text": " we are constantly going in cycles and asking for new packets. So that might be CPU-intensive a bit."
    },
    {
        "id": 90,
        "start": 984.7999877929688,
        "end": 992.5599975585938,
        "text": " So this was essentially what's different between the AF packet and DPDK."
    },
    {
        "id": 91,
        "start": 993.3599853515625,
        "end": 1002.9599914550781,
        "text": " The main difference is that the packets don't go to the kernel, and we constantly ask for"
    },
    {
        "id": 92,
        "start": 1003.5199890136719,
        "end": 1014.4800109863281,
        "text": " new packets to the NIC. I've prepared two small demos, one with a virtual machine"
    },
    {
        "id": 93,
        "start": 1014.8800048828125,
        "end": 1022.5599975585938,
        "text": " and one with a physical machine. The virtual machine runs Ubuntu 22.04 server"
    },
    {
        "id": 94,
        "start": 1023.2799987792969,
        "end": 1035.9200134277344,
        "text": " with virtual NICs. By having two machines, I wanted to show you that DPDK can be set up"
    },
    {
        "id": 95,
        "start": 1036.0,
        "end": 1045.2799987792969,
        "text": " in both environments and also wanted to point out maybe some little differences in between the"
    },
    {
        "id": 96,
        "start": 1048.0,
        "end": 1055.8399963378906,
        "text": " distributions of the Linux, let's say, and some tips and tricks on individual"
    },
    {
        "id": 97,
        "start": 1056.4800109863281,
        "end": 1066.0,
        "text": " operating systems. With the physical machine, there will be also, let's say, a configuration"
    },
    {
        "id": 98,
        "start": 1066.0,
        "end": 1075.9200134277344,
        "text": " process involved, meaning the physical machine is also, let's say, connected to"
    },
    {
        "id": 99,
        "start": 1076.5599975585938,
        "end": 1088.0799865722656,
        "text": " a live network, where we will also configure Serikata with certain parameters to make sure"
    },
    {
        "id": 100,
        "start": 1088.0799865722656,
        "end": 1093.2799987792969,
        "text": " we are up and running and not losing any packets, essentially. All right."
    },
    {
        "id": 101,
        "start": 1097.2000122070312,
        "end": 1100.0799865722656,
        "text": " Yeah, let's go. Demo."
    },
    {
        "id": 102,
        "start": 1100.0799865722656,
        "end": 1111.8399963378906,
        "text": " We will start with Ubuntu with the virtual machine. Essentially, what we will want to do"
    },
    {
        "id": 103,
        "start": 1111.8399963378906,
        "end": 1118.6400146484375,
        "text": " is to compile it from scratch. I think this can be helpful for folks who didn't compile Serikata yet."
    },
    {
        "id": 104,
        "start": 1121.4400024414062,
        "end": 1128.8800048828125,
        "text": " Essentially, the first thing that I want to do is to install all the required dependencies."
    },
    {
        "id": 105,
        "start": 1131.0400085449219,
        "end": 1132.239990234375,
        "text": " First, Serikata."
    },
    {
        "id": 106,
        "start": 1139.0400085449219,
        "end": 1145.4400024414062,
        "text": " When this will be done, we'll also install DPDK and"
    },
    {
        "id": 107,
        "start": 1148.5599975585938,
        "end": 1152.8800048828125,
        "text": " DPDK development packages."
    },
    {
        "id": 108,
        "start": 1161.0400085449219,
        "end": 1161.9200134277344,
        "text": " Let's try."
    },
    {
        "id": 109,
        "start": 1166.5599975585938,
        "end": 1171.2799987792969,
        "text": " Of course, this is a demo, so something must go wrong."
    },
    {
        "id": 110,
        "start": 1175.760009765625,
        "end": 1178.8800048828125,
        "text": " Let's try to update and upgrade."
    },
    {
        "id": 111,
        "start": 1191.0400085449219,
        "end": 1194.8800048828125,
        "text": " So let's try again."
    },
    {
        "id": 112,
        "start": 1201.2000122070312,
        "end": 1204.4000244140625,
        "text": " If nothing goes wrong, then it's not a demo."
    },
    {
        "id": 113,
        "start": 1210.0,
        "end": 1212.47998046875,
        "text": " Okay, seems like we are up and running."
    },
    {
        "id": 114,
        "start": 1212.5599975585938,
        "end": 1220.3200073242188,
        "text": " So this is installed. Now, those are the required packages."
    },
    {
        "id": 115,
        "start": 1221.8400268554688,
        "end": 1229.9199829101562,
        "text": " Now, let's install the DPDK as well. DPDK is provided in the Ubuntu repository already."
    },
    {
        "id": 116,
        "start": 1232.0,
        "end": 1237.760009765625,
        "text": " From Ubuntu 20, you have at least, I think, in Ubuntu 20, you have DPDK 19."
    },
    {
        "id": 117,
        "start": 1238.47998046875,
        "end": 1250.5599975585938,
        "text": " In Ubuntu 22, you have DPDK 21. The release cycle of DPDK is each year, there is one major release."
    },
    {
        "id": 118,
        "start": 1251.280029296875,
        "end": 1264.239990234375,
        "text": " And the 11th version of 19.11.2011 is kind of the LTS long-term support version."
    },
    {
        "id": 119,
        "start": 1265.0399780273438,
        "end": 1271.280029296875,
        "text": " It seems like we have DPDK installed. Now, let's check it with PackageConfig."
    },
    {
        "id": 120,
        "start": 1271.280029296875,
        "end": 1282.3200073242188,
        "text": " PackageConfig is for managing the libraries. So let's see. Yes, we got version 21.11.11."
    },
    {
        "id": 121,
        "start": 1282.3200073242188,
        "end": 1291.3599853515625,
        "text": " And the next thing for Serikata to compile, we need a cargo install."
    },
    {
        "id": 122,
        "start": 1294.8800048828125,
        "end": 1300.0800170898438,
        "text": " I mean, we need CPygen. So we'll install it with cargo."
    },
    {
        "id": 123,
        "start": 1302.4000244140625,
        "end": 1312.719970703125,
        "text": " And then we will need to export this kind of binary to our top environment. We'll see that in a second."
    },
    {
        "id": 124,
        "start": 1312.719970703125,
        "end": 1331.4400024414062,
        "text": " So yeah, DPDK is very stable in releasing each year. And essentially, it releases at least"
    },
    {
        "id": 125,
        "start": 1331.4400024414062,
        "end": 1338.0800170898438,
        "text": " three times a year, a minor release, usually every three to four months."
    },
    {
        "id": 126,
        "start": 1339.0399780273438,
        "end": 1352.1599731445312,
        "text": " And for the distributions or operating system that don't have DPDK compiled or included in their"
    },
    {
        "id": 127,
        "start": 1352.1599731445312,
        "end": 1360.1599731445312,
        "text": " repositories, I've also kind of prepared a variant for that. On that physical machine,"
    },
    {
        "id": 128,
        "start": 1360.1599731445312,
        "end": 1366.6400146484375,
        "text": " we will also compile DPDK just to show that it's really easy. If it's missing in your distribution,"
    },
    {
        "id": 129,
        "start": 1366.6400146484375,
        "end": 1373.52001953125,
        "text": " it's not really an issue and you can easily compile it and install it yourself."
    },
    {
        "id": 130,
        "start": 1373.52001953125,
        "end": 1377.52001953125,
        "text": " dpdk is not included in"
    },
    {
        "id": 131,
        "start": 1380.8800196647644,
        "end": 1387.52001953125,
        "text": " Spiricata repositories, but I think it should be, like"
    },
    {
        "id": 132,
        "start": 1389.1200199127197,
        "end": 1395.2000198364258,
        "text": " when 7 is out, I don't think you should even need to compile it yourself."
    },
    {
        "id": 133,
        "start": 1396.4000186920166,
        "end": 1400.6400203704834,
        "text": " It's probably included already in the package itself."
    },
    {
        "id": 134,
        "start": 1403.52001953125,
        "end": 1409.4400177001953,
        "text": " So it's almost done, it just needs a little bit more time and"
    },
    {
        "id": 135,
        "start": 1414.080020904541,
        "end": 1417.0400199890137,
        "text": " now we will add it to the path."
    },
    {
        "id": 136,
        "start": 1417.0400199890137,
        "end": 1439.8400192260742,
        "text": " While we are waiting, I'll clone the Spiricata repository, so we are patient with our time."
    },
    {
        "id": 137,
        "start": 1439.8400192260742,
        "end": 1453.8400192260742,
        "text": " Time is sparse, so that's cloning, and that's cloning of the official GitHub repository."
    },
    {
        "id": 138,
        "start": 1454.640022277832,
        "end": 1463.6000213623047,
        "text": " All right, Cargo already warned us that we should add this out to our path variable,"
    },
    {
        "id": 139,
        "start": 1463.8400192260742,
        "end": 1466.0800170898438,
        "text": " and so I'll do it."
    },
    {
        "id": 140,
        "start": 1468.1600189208984,
        "end": 1476.3200225830078,
        "text": " This command will add it basically to your bashrc, and that's the kind of script from where you can,"
    },
    {
        "id": 141,
        "start": 1477.6000213623047,
        "end": 1484.0000228881836,
        "text": " which is always loaded when you log in, but for now we will just also export it directly."
    },
    {
        "id": 142,
        "start": 1484.7200164794922,
        "end": 1505.52001953125,
        "text": " Spiricata is already cloned, so we can enter it, and what you want to do now is to"
    },
    {
        "id": 143,
        "start": 1505.8400268554688,
        "end": 1514.1600189208984,
        "text": " bundle all the dependencies. In this case, it essentially means bundling libhtp library,"
    },
    {
        "id": 144,
        "start": 1515.6000213623047,
        "end": 1524.4000244140625,
        "text": " and now we can initialize our working environment with autogen."
    },
    {
        "id": 145,
        "start": 1524.7200164794922,
        "end": 1539.2000122070312,
        "text": " For build process, Spiricata uses libtools, and kind of essential steps for compiling"
    },
    {
        "id": 146,
        "start": 1539.2000122070312,
        "end": 1547.6000213623047,
        "text": " libtool projects is autogen and configure. Configure script is like what you want to"
    },
    {
        "id": 147,
        "start": 1547.6800231933594,
        "end": 1554.4800262451172,
        "text": " include in your build. In our build, I want to include dpdk. This will be kind of the minimal"
    },
    {
        "id": 148,
        "start": 1555.6800231933594,
        "end": 1562.9600219726562,
        "text": " configuration. If I would be installing this on a machine, then I would add some additional"
    },
    {
        "id": 149,
        "start": 1562.9600219726562,
        "end": 1573.040023803711,
        "text": " configure parameters, but for now, I think enable dpdk is how you enable dpdk in your build,"
    },
    {
        "id": 150,
        "start": 1573.040023803711,
        "end": 1582.4800262451172,
        "text": " and we're good to go. When I scroll up a bit, I can verify that Spiricata configuration has"
    },
    {
        "id": 151,
        "start": 1582.4800262451172,
        "end": 1588.0800170898438,
        "text": " air packet support, that's the default, and dpdk support, that's the important part today."
    },
    {
        "id": 152,
        "start": 1590.5600128173828,
        "end": 1599.3600158691406,
        "text": " The other thing you can also check, but for now, we are good to go because it's enabled,"
    },
    {
        "id": 153,
        "start": 1600.000015258789,
        "end": 1606.9600219726562,
        "text": " and now we can essentially compile it."
    },
    {
        "id": 154,
        "start": 1612.3200225830078,
        "end": 1623.280014038086,
        "text": " Before we run Spiricata with dpdk, I think we can proceed to also verify that our dpdk"
    },
    {
        "id": 155,
        "start": 1623.8400268554688,
        "end": 1629.760009765625,
        "text": " installation has gone really successfully, not only by checking the"
    },
    {
        "id": 156,
        "start": 1635.2000122070312,
        "end": 1646.1600341796875,
        "text": " package config, but also by kind of listing the dpdk applications. In this application, I can see"
    },
    {
        "id": 157,
        "start": 1647.1200256347656,
        "end": 1655.3600158691406,
        "text": " three essential applications that you will need to use, and that is essentially dpdk.bind,"
    },
    {
        "id": 158,
        "start": 1659.1200256347656,
        "end": 1666.8800048828125,
        "text": " with which you work with your devices, with your network interface cards, dpdk huge pages"
    },
    {
        "id": 159,
        "start": 1667.6800231933594,
        "end": 1680.8800048828125,
        "text": " for allocating this memory pages in your memory, because dpdk essentially uses those"
    },
    {
        "id": 160,
        "start": 1681.4400329589844,
        "end": 1690.0000305175781,
        "text": " to be more effective. I don't want to go into too much detail, but the default"
    },
    {
        "id": 161,
        "start": 1690.7200317382812,
        "end": 1699.0400085449219,
        "text": " Linux distributions uses memory pages of size two kilobytes, or I mean four kilobytes,"
    },
    {
        "id": 162,
        "start": 1700.8000183105469,
        "end": 1709.1200256347656,
        "text": " but in dpdk, as you want to minimize the, like, what you need to do with your,"
    },
    {
        "id": 163,
        "start": 1709.3600158691406,
        "end": 1720.0800170898438,
        "text": " like, you want to minimize the process of looking up the individual pages of your system,"
    },
    {
        "id": 164,
        "start": 1720.0800170898438,
        "end": 1725.760009765625,
        "text": " so that's why huge pages exist. When you have an application that has a lot of data,"
    },
    {
        "id": 165,
        "start": 1725.760009765625,
        "end": 1732.6400146484375,
        "text": " you want to store it in bigger chunks of memory, and that's what huge pages are for,"
    },
    {
        "id": 166,
        "start": 1732.6400146484375,
        "end": 1739.52001953125,
        "text": " so we will use a huge pages script, and we will use testpmd scripts to kind of,"
    },
    {
        "id": 167,
        "start": 1739.52001953125,
        "end": 1746.5600280761719,
        "text": " that's the essential dpdk verification tool. If something is not working and you are not"
    },
    {
        "id": 168,
        "start": 1746.5600280761719,
        "end": 1753.4400329589844,
        "text": " able to reproduce it in a testpmd application, then it's probably something wrong with you."
    },
    {
        "id": 169,
        "start": 1754.4000244140625,
        "end": 1764.0000305175781,
        "text": " With dpdk devbind, you can, like, bash s as a status. You can see that we have three devices"
    },
    {
        "id": 170,
        "start": 1764.0000305175781,
        "end": 1780.4800109863281,
        "text": " here, and it has ethousand driver. Ethousand driver is a driver that's not supported by dpdk"
    },
    {
        "id": 171,
        "start": 1780.8000183105469,
        "end": 1793.280029296875,
        "text": " natively. What you need to do is to bind a different driver to this virtual interface"
    },
    {
        "id": 172,
        "start": 1794.2400207519531,
        "end": 1804.3200073242188,
        "text": " so that dpdk can work with that. What that means is you can either use vfio-pcie driver,"
    },
    {
        "id": 173,
        "start": 1805.280029296875,
        "end": 1814.5600280761719,
        "text": " or there is another driver that's called, I think, let's try it, and to invoke it."
    },
    {
        "id": 174,
        "start": 1820.5600280761719,
        "end": 1828.3200073242188,
        "text": " Yes, that was correct, so when I now list it with the mock pro command, I invoke the"
    },
    {
        "id": 175,
        "start": 1828.4000244140625,
        "end": 1836.6400146484375,
        "text": " second driver. Now it's in the list as well, and I can essentially link it to the driver,"
    },
    {
        "id": 176,
        "start": 1837.3600158691406,
        "end": 1849.52001953125,
        "text": " and that can be done by sudo dpdk devbind. I'll press dash b as bind, vio-pcie generic,"
    },
    {
        "id": 177,
        "start": 1850.2400207519531,
        "end": 1861.0400085449219,
        "text": " and now you cannot use the interface name because this is kind of the kernel thing."
    },
    {
        "id": 178,
        "start": 1861.6800231933594,
        "end": 1868.7200317382812,
        "text": " When you are in the dpdk, you essentially bypass kernel, and when you bypass kernel,"
    },
    {
        "id": 179,
        "start": 1868.7200317382812,
        "end": 1876.2400207519531,
        "text": " you only have the pcie address, so you need to enter your pcie address of the device you want"
    },
    {
        "id": 180,
        "start": 1876.2400207519531,
        "end": 1884.8000183105469,
        "text": " to bind, and now when we verify that, we have a line which says network devices using dpdk"
    },
    {
        "id": 181,
        "start": 1884.8000183105469,
        "end": 1891.52001953125,
        "text": " compatible driver, and now we have our interface bound to this interface."
    },
    {
        "id": 182,
        "start": 1894.7200317382812,
        "end": 1902.8800048828125,
        "text": " Okay, Serika is compiled, so we are ready, but let's first also try it with testdmd,"
    },
    {
        "id": 183,
        "start": 1902.8800048828125,
        "end": 1908.239990234375,
        "text": " so we got huge pages, also the s is like a status."
    },
    {
        "id": 184,
        "start": 1909.9200439453125,
        "end": 1914.7200317382812,
        "text": " We see that we don't have any huge pages at the moment, so we want to"
    },
    {
        "id": 185,
        "start": 1918.4800415039062,
        "end": 1928.1600341796875,
        "text": " allocate some. The help is really helpful, so let's say we want to set up"
    },
    {
        "id": 186,
        "start": 1929.1199951171875,
        "end": 1942.239990234375,
        "text": " one gigabyte of huge pages, and when we go to status of the huge pages, we now see that we have"
    },
    {
        "id": 187,
        "start": 1942.239990234375,
        "end": 1950.9600219726562,
        "text": " 512 pages of two megabytes of size, which totals to one gigabyte."
    },
    {
        "id": 188,
        "start": 1951.0400390625,
        "end": 1961.1199951171875,
        "text": " Okay, now that we have our huge pages, it's time to test it with testdmd commands."
    },
    {
        "id": 189,
        "start": 1962.7200317382812,
        "end": 1969.1199951171875,
        "text": " Currently, in this VM, I don't have it wired with anything special. I'll just"
    },
    {
        "id": 190,
        "start": 1969.760009765625,
        "end": 1982.3200073242188,
        "text": " use a as an allow. Let's say by allow, you're only allowing this interface to be"
    },
    {
        "id": 191,
        "start": 1982.8800048828125,
        "end": 1994.800048828125,
        "text": " used with this application. You're not allowing other links to be used with this application."
    },
    {
        "id": 192,
        "start": 1999.9200439453125,
        "end": 2002.4800415039062,
        "text": " So yeah, let's allow only this, and"
    },
    {
        "id": 193,
        "start": 2007.9200439453125,
        "end": 2016.239990234375,
        "text": " I think it's a bit central to go over these parameters with dpdk applications."
    },
    {
        "id": 194,
        "start": 2017.52001953125,
        "end": 2024.8800048828125,
        "text": " The usual way how parameters or command line parameters are structured is that in the first"
    },
    {
        "id": 195,
        "start": 2024.8800048828125,
        "end": 2033.0400390625,
        "text": " place, you have environment abstraction layer parameters. That's kind of the envelope. That's"
    },
    {
        "id": 196,
        "start": 2033.760009765625,
        "end": 2041.6799926757812,
        "text": " where the dpdk application lives, and then you put two dashes, and that's kind of like after"
    },
    {
        "id": 197,
        "start": 2041.6799926757812,
        "end": 2051.1199951171875,
        "text": " these two dashes, the application parameters will go. With testdmd, we are essentially saying"
    },
    {
        "id": 198,
        "start": 2051.1199951171875,
        "end": 2055.760009765625,
        "text": " that we will work in interactive mode, which means we will"
    },
    {
        "id": 199,
        "start": 2055.760009765625,
        "end": 2058.880009651184,
        "text": " directly control the test PMD application."
    },
    {
        "id": 200,
        "start": 2060.920009613037,
        "end": 2065.3600101470947,
        "text": " Now, I'm not sure why, but in this virtual environment"
    },
    {
        "id": 201,
        "start": 2066.520009994507,
        "end": 2071.520009994507,
        "text": " on my laptop, it takes some time to load the application."
    },
    {
        "id": 202,
        "start": 2073.520009994507,
        "end": 2076.8000106811523,
        "text": " But as we can see, it's started to load."
    },
    {
        "id": 203,
        "start": 2078.3600101470947,
        "end": 2082.440010070801,
        "text": " We will see, let's check how the Surikata is doing."
    },
    {
        "id": 204,
        "start": 2082.440010070801,
        "end": 2084.8800106048584,
        "text": " Surikata has compiled successfully."
    },
    {
        "id": 205,
        "start": 2084.8800106048584,
        "end": 2088.760009765625,
        "text": " So I'm not gonna install it."
    },
    {
        "id": 206,
        "start": 2088.760009765625,
        "end": 2090.600009918213,
        "text": " I'm just gonna run it,"
    },
    {
        "id": 207,
        "start": 2090.600009918213,
        "end": 2094.8000106811523,
        "text": " just to make sure we have set it up correctly."
    },
    {
        "id": 208,
        "start": 2094.8000106811523,
        "end": 2099.8000106811523,
        "text": " I'll use directly the configuration file"
    },
    {
        "id": 209,
        "start": 2100.5600090026855,
        "end": 2104.360008239746,
        "text": " that's Surikata.yaml."
    },
    {
        "id": 210,
        "start": 2104.360008239746,
        "end": 2107.6400108337402,
        "text": " And when we search for VPDK section,"
    },
    {
        "id": 211,
        "start": 2107.6400108337402,
        "end": 2112.080009460449,
        "text": " we have exactly what I've discussed just previously,"
    },
    {
        "id": 212,
        "start": 2112.080009460449,
        "end": 2116.000011444092,
        "text": " that those are the YAL environment"
    },
    {
        "id": 213,
        "start": 2116.000011444092,
        "end": 2118.360008239746,
        "text": " abstraction layer parameters."
    },
    {
        "id": 214,
        "start": 2118.360008239746,
        "end": 2119.9200134277344,
        "text": " You could have the cross-type,"
    },
    {
        "id": 215,
        "start": 2119.9200134277344,
        "end": 2122.880012512207,
        "text": " you could have the A, as I mentioned,"
    },
    {
        "id": 216,
        "start": 2122.880012512207,
        "end": 2126.080009460449,
        "text": " you could have it like this."
    },
    {
        "id": 217,
        "start": 2127.440010070801,
        "end": 2130.160011291504,
        "text": " In this case, I mean, it's not really required,"
    },
    {
        "id": 218,
        "start": 2130.160011291504,
        "end": 2134.560012817383,
        "text": " but it's always a good idea to isolate the mix"
    },
    {
        "id": 219,
        "start": 2134.560012817383,
        "end": 2136.440010070801,
        "text": " that you want to use."
    },
    {
        "id": 220,
        "start": 2136.440010070801,
        "end": 2141.440010070801,
        "text": " And on the second part of the VPDK section,"
    },
    {
        "id": 221,
        "start": 2142.160011291504,
        "end": 2145.4000091552734,
        "text": " covers the interfaces that we want to configure."
    },
    {
        "id": 222,
        "start": 2146.4000091552734,
        "end": 2148.640007019043,
        "text": " In this case, we got some,"
    },
    {
        "id": 223,
        "start": 2148.640007019043,
        "end": 2151.2000122070312,
        "text": " the first item is the interface,"
    },
    {
        "id": 224,
        "start": 2151.2000122070312,
        "end": 2154.2800064086914,
        "text": " but it's the PCI address of the interface"
    },
    {
        "id": 225,
        "start": 2154.2800064086914,
        "end": 2158.2800064086914,
        "text": " was not 3B, but I think 008."
    },
    {
        "id": 226,
        "start": 2163.4000091552734,
        "end": 2164.2400131225586,
        "text": " Let's see."
    },
    {
        "id": 227,
        "start": 2165.2800064086914,
        "end": 2166.560012817383,
        "text": " Yes, that's it."
    },
    {
        "id": 228,
        "start": 2166.560012817383,
        "end": 2171.560012817383,
        "text": " Yeah, we see that we are already in the test PMB application"
    },
    {
        "id": 229,
        "start": 2172.440010070801,
        "end": 2177.440010070801,
        "text": " so we would be able to do the start, stop and quit."
    },
    {
        "id": 230,
        "start": 2181.6800079345703,
        "end": 2184.4400024414062,
        "text": " Yeah, the test PMB application, what it does,"
    },
    {
        "id": 231,
        "start": 2185.480010986328,
        "end": 2190.2000122070312,
        "text": " it's kind of, as I said, essential testing application"
    },
    {
        "id": 232,
        "start": 2191.9200134277344,
        "end": 2195.6400146484375,
        "text": " to test whether your NIC behaves correctly,"
    },
    {
        "id": 233,
        "start": 2195.6400146484375,
        "end": 2198.520004272461,
        "text": " but in its simplest form,"
    },
    {
        "id": 234,
        "start": 2198.520004272461,
        "end": 2202.6000061035156,
        "text": " it basically just forwards packets of one interface"
    },
    {
        "id": 235,
        "start": 2202.6000061035156,
        "end": 2204.3200073242188,
        "text": " to the other and vice versa."
    },
    {
        "id": 236,
        "start": 2205.8400115966797,
        "end": 2208.000015258789,
        "text": " But in this case, we don't have it wired"
    },
    {
        "id": 237,
        "start": 2208.000015258789,
        "end": 2211.2000122070312,
        "text": " with like with the second pair,"
    },
    {
        "id": 238,
        "start": 2212.8800048828125,
        "end": 2216.480010986328,
        "text": " and it was just a test that our application is running."
    },
    {
        "id": 239,
        "start": 2217.4400024414062,
        "end": 2219.760009765625,
        "text": " We will test it with Surikata as well."
    },
    {
        "id": 240,
        "start": 2222.6000061035156,
        "end": 2227.6000061035156,
        "text": " Well, when you are setting up the VPDK in Surikata"
    },
    {
        "id": 241,
        "start": 2228.2000122070312,
        "end": 2231.960006713867,
        "text": " you always, I think you always want to specify"
    },
    {
        "id": 242,
        "start": 2231.960006713867,
        "end": 2236.4000091552734,
        "text": " the number of threads that you want to use."
    },
    {
        "id": 243,
        "start": 2236.4000091552734,
        "end": 2241.4000091552734,
        "text": " And the other settings, I think we can leave as is for now."
    },
    {
        "id": 244,
        "start": 2244.8400115966797,
        "end": 2247.6000061035156,
        "text": " Let's see, set CPU affinity,"
    },
    {
        "id": 245,
        "start": 2247.6000061035156,
        "end": 2250.9200134277344,
        "text": " and we're going to use, we want to use,"
    },
    {
        "id": 246,
        "start": 2253.2000122070312,
        "end": 2257.3600158691406,
        "text": " we want to set CPU affinity as we will see in a second"
    },
    {
        "id": 247,
        "start": 2258.1200103759766,
        "end": 2259.040008544922,
        "text": " on the physical machine."
    },
    {
        "id": 248,
        "start": 2259.040008544922,
        "end": 2263.1200103759766,
        "text": " If you don't do it, all threads will just end up"
    },
    {
        "id": 249,
        "start": 2263.1200103759766,
        "end": 2265.9200134277344,
        "text": " on the first core."
    },
    {
        "id": 250,
        "start": 2265.9200134277344,
        "end": 2269.0800170898438,
        "text": " So we enabled two worker threads."
    },
    {
        "id": 251,
        "start": 2269.0800170898438,
        "end": 2274.0800170898438,
        "text": " So I'm setting this to two CPU cores."
    },
    {
        "id": 252,
        "start": 2277.520004272461,
        "end": 2282.1200103759766,
        "text": " And so I think it should be ready to go."
    },
    {
        "id": 253,
        "start": 2283.4400024414062,
        "end": 2286.8400115966797,
        "text": " And our binary is in source Surikata."
    },
    {
        "id": 254,
        "start": 2288.3600158691406,
        "end": 2291.4000091552734,
        "text": " I want to use with the C parameter,"
    },
    {
        "id": 255,
        "start": 2291.4000091552734,
        "end": 2293.9200134277344,
        "text": " the configuration file."
    },
    {
        "id": 256,
        "start": 2293.9200134277344,
        "end": 2298.9200134277344,
        "text": " I don't want to use any rules currently with a capital S."
    },
    {
        "id": 257,
        "start": 2301.040008544922,
        "end": 2303.4400024414062,
        "text": " I will be very verbose,"
    },
    {
        "id": 258,
        "start": 2303.4400024414062,
        "end": 2308.4400024414062,
        "text": " and my logs will be stored in the temporary directory."
    },
    {
        "id": 259,
        "start": 2311.280014038086,
        "end": 2313.8399963378906,
        "text": " I did something wrong, doesn't matter."
    },
    {
        "id": 260,
        "start": 2314.6800231933594,
        "end": 2316.2000122070312,
        "text": " Let's see the error."
    },
    {
        "id": 261,
        "start": 2317.720001220703,
        "end": 2318.5599975585938,
        "text": " Um."
    },
    {
        "id": 262,
        "start": 2332.9200134277344,
        "end": 2335.2000122070312,
        "text": " And my other application is not,"
    },
    {
        "id": 263,
        "start": 2335.2000122070312,
        "end": 2338.9600219726562,
        "text": " ah, okay, I'm missing the run one."
    },
    {
        "id": 264,
        "start": 2338.9600219726562,
        "end": 2342.6000061035156,
        "text": " That's the most important thing."
    },
    {
        "id": 265,
        "start": 2342.6000061035156,
        "end": 2344.4400024414062,
        "text": " I need to tell Surikata basically"
    },
    {
        "id": 266,
        "start": 2344.4400024414062,
        "end": 2346.6800231933594,
        "text": " which capture interface I want to use"
    },
    {
        "id": 267,
        "start": 2347.0,
        "end": 2348.6400146484375,
        "text": " because I could use a packet,"
    },
    {
        "id": 268,
        "start": 2348.6400146484375,
        "end": 2351.9200134277344,
        "text": " I could use dpdk like this, a packet,"
    },
    {
        "id": 269,
        "start": 2351.9200134277344,
        "end": 2354.279998779297,
        "text": " but today we'll leave dpdk."
    },
    {
        "id": 270,
        "start": 2355.800018310547,
        "end": 2358.720001220703,
        "text": " And now the application is starting."
    },
    {
        "id": 271,
        "start": 2358.720001220703,
        "end": 2363.720001220703,
        "text": " It produces a lot of output because I set it to do so,"
    },
    {
        "id": 272,
        "start": 2365.279998779297,
        "end": 2368.800018310547,
        "text": " and it should load within a minute or two."
    },
    {
        "id": 273,
        "start": 2370.2000122070312,
        "end": 2374.2000122070312,
        "text": " In your environment, especially on physical machine,"
    },
    {
        "id": 274,
        "start": 2374.240020751953,
        "end": 2377.9200134277344,
        "text": " it definitely should not take this long."
    },
    {
        "id": 275,
        "start": 2377.9200134277344,
        "end": 2381.5599975585938,
        "text": " Okay, that's why I wanted to show you this"
    },
    {
        "id": 276,
        "start": 2381.5599975585938,
        "end": 2383.9600219726562,
        "text": " kind of in virtual environments,"
    },
    {
        "id": 277,
        "start": 2385.2000122070312,
        "end": 2389.040008544922,
        "text": " at least with the adapters I've tried it with."
    },
    {
        "id": 278,
        "start": 2389.040008544922,
        "end": 2391.8399963378906,
        "text": " You cannot set more than one worker,"
    },
    {
        "id": 279,
        "start": 2391.8399963378906,
        "end": 2395.480010986328,
        "text": " and that's kind of limiting for us."
    },
    {
        "id": 280,
        "start": 2397.8399963378906,
        "end": 2401.5599975585938,
        "text": " And it's not supported within those networks."
    },
    {
        "id": 281,
        "start": 2404.3600158691406,
        "end": 2407.760009765625,
        "text": " Adapters, so that's kind of a thing."
    },
    {
        "id": 282,
        "start": 2407.760009765625,
        "end": 2412.3600158691406,
        "text": " So for now, we will set it to one worker only,"
    },
    {
        "id": 283,
        "start": 2412.3600158691406,
        "end": 2413.800018310547,
        "text": " and we will try to run it."
    },
    {
        "id": 284,
        "start": 2416.3200073242188,
        "end": 2421.3200073242188,
        "text": " Okay, considering, hopefully this will run in a minute."
    },
    {
        "id": 285,
        "start": 2424.3600158691406,
        "end": 2427.240020751953,
        "text": " Let's probably move to the physical machine."
    },
    {
        "id": 286,
        "start": 2430.3200073242188,
        "end": 2431.6400146484375,
        "text": " We are currently here."
    },
    {
        "id": 287,
        "start": 2431.6800231933594,
        "end": 2434.6800231933594,
        "text": " I already have StoryCata clones,"
    },
    {
        "id": 288,
        "start": 2437.480010986328,
        "end": 2441.9200134277344,
        "text": " but I don't have it compiled just to be on,"
    },
    {
        "id": 289,
        "start": 2443.3200073242188,
        "end": 2446.1600036621094,
        "text": " like just to start from the beginning."
    },
    {
        "id": 290,
        "start": 2449.1199951171875,
        "end": 2453.4400024414062,
        "text": " In this directory, let's say on this physical machine,"
    },
    {
        "id": 291,
        "start": 2453.4400024414062,
        "end": 2456.5599975585938,
        "text": " this is Oracle Linux Server 8.7,"
    },
    {
        "id": 292,
        "start": 2457.5599975585938,
        "end": 2459.720001220703,
        "text": " like the software distribution."
    },
    {
        "id": 293,
        "start": 2459.720001220703,
        "end": 2463.8800048828125,
        "text": " And let's say DPDK is not included."
    },
    {
        "id": 294,
        "start": 2463.8800048828125,
        "end": 2466.2000122070312,
        "text": " So let's compile it really quickly."
    },
    {
        "id": 295,
        "start": 2467.3200073242188,
        "end": 2470.9200134277344,
        "text": " It's using, instead of make,"
    },
    {
        "id": 296,
        "start": 2470.9200134277344,
        "end": 2475.800018310547,
        "text": " it's using Mism and Ninja as the tools."
    },
    {
        "id": 297,
        "start": 2475.800018310547,
        "end": 2478.240020751953,
        "text": " So let's install them."
    },
    {
        "id": 298,
        "start": 2481.4000244140625,
        "end": 2483.480010986328,
        "text": " When you install the Mism,"
    },
    {
        "id": 299,
        "start": 2483.480010986328,
        "end": 2487.6000061035156,
        "text": " then the Ninja is automatically installed as well."
    },
    {
        "id": 300,
        "start": 2489.8800048828125,
        "end": 2493.8399963378906,
        "text": " All right, this is the StoryCata virtual machine,"
    },
    {
        "id": 301,
        "start": 2493.8399963378906,
        "end": 2495.4400024414062,
        "text": " the Ubuntu one."
    },
    {
        "id": 302,
        "start": 2495.4400024414062,
        "end": 2498.0800170898438,
        "text": " We see that it's already started."
    },
    {
        "id": 303,
        "start": 2498.0800170898438,
        "end": 2500.040008544922,
        "text": " It's all good."
    },
    {
        "id": 304,
        "start": 2500.040008544922,
        "end": 2503.8399963378906,
        "text": " And now we would be running StoryCata on Ubuntu machine."
    },
    {
        "id": 305,
        "start": 2503.8399963378906,
        "end": 2504.8800048828125,
        "text": " So that's all good."
    },
    {
        "id": 306,
        "start": 2510.5599975585938,
        "end": 2514.2000122070312,
        "text": " Also, this also already received some package."
    },
    {
        "id": 307,
        "start": 2515.480010986328,
        "end": 2518.720001220703,
        "text": " Okay, so we get Mism installed."
    },
    {
        "id": 308,
        "start": 2518.720001220703,
        "end": 2521.6000061035156,
        "text": " And in this server, we have Intel NIC"
    },
    {
        "id": 309,
        "start": 2521.6000061035156,
        "end": 2523.800018310547,
        "text": " and Mellanox or NVIDIA NIC."
    },
    {
        "id": 310,
        "start": 2526.6400146484375,
        "end": 2531.6400146484375,
        "text": " I'll use Mism commands to set up the build directory."
    },
    {
        "id": 311,
        "start": 2532.0,
        "end": 2535.8800048828125,
        "text": " This essentially says that I will use"
    },
    {
        "id": 312,
        "start": 2535.8800048828125,
        "end": 2540.0,
        "text": " prefix for installation slash user directly."
    },
    {
        "id": 313,
        "start": 2541.0,
        "end": 2544.6800231933594,
        "text": " By default, it's installed in slash user slash local,"
    },
    {
        "id": 314,
        "start": 2544.6800231933594,
        "end": 2548.6400146484375,
        "text": " but from my experience,"
    },
    {
        "id": 315,
        "start": 2548.6400146484375,
        "end": 2551.9600219726562,
        "text": " it's easier to just set it to slash user"
    },
    {
        "id": 316,
        "start": 2551.9600219726562,
        "end": 2556.52001953125,
        "text": " because it's easier found by the build services, let's say."
    },
    {
        "id": 317,
        "start": 2557.8800048828125,
        "end": 2562.8800048828125,
        "text": " But as I mentioned, in the server, I have a Mellanox card."
    },
    {
        "id": 318,
        "start": 2563.6400146484375,
        "end": 2565.9600219726562,
        "text": " And what I found,"
    },
    {
        "id": 319,
        "start": 2565.9600219726562,
        "end": 2570.0400390625,
        "text": " or what I want to check on the Mism output"
    },
    {
        "id": 320,
        "start": 2570.0400390625,
        "end": 2575.0400390625,
        "text": " is that I have my Intel driver E4P enabled"
    },
    {
        "id": 321,
        "start": 2575.6000366210938,
        "end": 2579.6000366210938,
        "text": " and the Mellanox MLX5 driver enabled."
    },
    {
        "id": 322,
        "start": 2579.6000366210938,
        "end": 2584.6000366210938,
        "text": " I will look into drivers enabled and I4P is there,"
    },
    {
        "id": 323,
        "start": 2585.6000366210938,
        "end": 2589.0800170898438,
        "text": " but I don't see Mellanox."
    },
    {
        "id": 324,
        "start": 2589.0800170898438,
        "end": 2594.0800170898438,
        "text": " And that's because it's in between like in skipped content"
    },
    {
        "id": 325,
        "start": 2595.0,
        "end": 2597.6000366210938,
        "text": " because it's missing some dependencies."
    },
    {
        "id": 326,
        "start": 2598.5599975585938,
        "end": 2603.4000244140625,
        "text": " So I want to install the Mellanox dependencies"
    },
    {
        "id": 327,
        "start": 2603.4000244140625,
        "end": 2607.8800048828125,
        "text": " just to have it included in my compilation."
    },
    {
        "id": 328,
        "start": 2607.8800048828125,
        "end": 2611.8400268554688,
        "text": " That's one thing that you need to be careful of."
    },
    {
        "id": 329,
        "start": 2618.47998046875,
        "end": 2620.52001953125,
        "text": " Now that it's installed,"
    },
    {
        "id": 330,
        "start": 2620.52001953125,
        "end": 2624.280029296875,
        "text": " I'll remove my original build directory"
    },
    {
        "id": 331,
        "start": 2624.280029296875,
        "end": 2627.9600219726562,
        "text": " and configure the build directory again."
    },
    {
        "id": 332,
        "start": 2628.9199829101562,
        "end": 2631.6799926757812,
        "text": " Now it should include also the Mellanox driver"
    },
    {
        "id": 333,
        "start": 2633.47998046875,
        "end": 2637.280029296875,
        "text": " for my network interface card."
    },
    {
        "id": 334,
        "start": 2637.280029296875,
        "end": 2639.280029296875,
        "text": " And now that it is included,"
    },
    {
        "id": 335,
        "start": 2639.280029296875,
        "end": 2642.760009765625,
        "text": " I don't see it anymore in the skipped content"
    },
    {
        "id": 336,
        "start": 2642.760009765625,
        "end": 2647.4000244140625,
        "text": " and I should check it in my drivers enabled."
    },
    {
        "id": 337,
        "start": 2647.4000244140625,
        "end": 2652.4000244140625,
        "text": " I see it's in my Mellanox enabled as well."
    },
    {
        "id": 338,
        "start": 2653.0400390625,
        "end": 2655.3200073242188,
        "text": " All right, so since this is enabled,"
    },
    {
        "id": 339,
        "start": 2655.3200073242188,
        "end": 2660.3200073242188,
        "text": " I'll just compile it with a ninja command"
    },
    {
        "id": 340,
        "start": 2662.9199829101562,
        "end": 2667.8400268554688,
        "text": " and I'll install it directly in one command."
    },
    {
        "id": 341,
        "start": 2667.8400268554688,
        "end": 2672.6000366210938,
        "text": " So this is how you would, this command compiles it"
    },
    {
        "id": 342,
        "start": 2672.6000366210938,
        "end": 2675.47998046875,
        "text": " and the second command installs the DPDK."
    },
    {
        "id": 343,
        "start": 2677.0,
        "end": 2678.0400390625,
        "text": " This might take a while,"
    },
    {
        "id": 344,
        "start": 2678.0400390625,
        "end": 2683.0400390625,
        "text": " so let's look into our Suricata"
    },
    {
        "id": 345,
        "start": 2684.47998046875,
        "end": 2686.6400146484375,
        "text": " how we are doing with Suricata."
    },
    {
        "id": 346,
        "start": 2686.6400146484375,
        "end": 2691.6400146484375,
        "text": " This is again a cloned repository from the OSF GitHub."
    },
    {
        "id": 347,
        "start": 2695.9600219726562,
        "end": 2700.6400146484375,
        "text": " Now let's install the required dependencies."
    },
    {
        "id": 348,
        "start": 2702.0,
        "end": 2706.52001953125,
        "text": " On a Oracle Linux, it looks something like this."
    },
    {
        "id": 349,
        "start": 2707.3200073242188,
        "end": 2712.3200073242188,
        "text": " I've installed this essential dependencies"
    },
    {
        "id": 350,
        "start": 2712.7999877929688,
        "end": 2716.8400268554688,
        "text": " from which, without which Suricata wouldn't compile."
    },
    {
        "id": 351,
        "start": 2720.0,
        "end": 2725.0,
        "text": " And I also added, or will also add a hyperscan"
    },
    {
        "id": 352,
        "start": 2727.239990234375,
        "end": 2731.7999877929688,
        "text": " to make sure our detection module is faster"
    },
    {
        "id": 353,
        "start": 2731.7999877929688,
        "end": 2735.6000366210938,
        "text": " than with the default detection algorithms."
    },
    {
        "id": 354,
        "start": 2735.6000366210938,
        "end": 2738.52001953125,
        "text": " So yeah, I would also recommend you"
    },
    {
        "id": 355,
        "start": 2738.52001953125,
        "end": 2742.1600341796875,
        "text": " to enable hyperscan in your build."
    },
    {
        "id": 356,
        "start": 2742.1600341796875,
        "end": 2743.5200341939926,
        "text": " We'll see that in a minute."
    },
    {
        "id": 357,
        "start": 2746.520034313202,
        "end": 2747.3600339889526,
        "text": " Let's see."
    },
    {
        "id": 358,
        "start": 2749.680034160614,
        "end": 2751.4400339126587,
        "text": " Let's see how is Ninja doing."
    },
    {
        "id": 359,
        "start": 2753.760034561157,
        "end": 2757.3600339889526,
        "text": " Ninja is almost finished with BPDK compilation"
    },
    {
        "id": 360,
        "start": 2757.3600339889526,
        "end": 2760.360034942627,
        "text": " with the Hyperscan installation."
    },
    {
        "id": 361,
        "start": 2760.360034942627,
        "end": 2762.680034637451,
        "text": " Now we have it installed."
    },
    {
        "id": 362,
        "start": 2762.680034637451,
        "end": 2766.020034790039,
        "text": " We essentially want to do the same thing as,"
    },
    {
        "id": 363,
        "start": 2768.600034713745,
        "end": 2770.600034713745,
        "text": " as in the Ubuntu."
    },
    {
        "id": 364,
        "start": 2770.600034713745,
        "end": 2775.0600357055664,
        "text": " We want to install the cbindgen with cargo."
    },
    {
        "id": 365,
        "start": 2778.0000343322754,
        "end": 2780.4000358581543,
        "text": " And on this machine,"
    },
    {
        "id": 366,
        "start": 2780.4000358581543,
        "end": 2785.3200340270996,
        "text": " I've already exported the path to the cbindgen."
    },
    {
        "id": 367,
        "start": 2785.3200340270996,
        "end": 2786.640033721924,
        "text": " So I don't need to do that,"
    },
    {
        "id": 368,
        "start": 2786.640033721924,
        "end": 2790.8400344848633,
        "text": " but that would be basically export path commands"
    },
    {
        "id": 369,
        "start": 2790.8400344848633,
        "end": 2793.5600357055664,
        "text": " as you've seen in the Ubuntu."
    },
    {
        "id": 370,
        "start": 2793.5600357055664,
        "end": 2798.5600357055664,
        "text": " Now we see that BPDK is compiled and installed."
    },
    {
        "id": 371,
        "start": 2798.960033416748,
        "end": 2801.12003326416,
        "text": " This essentially confirms it."
    },
    {
        "id": 372,
        "start": 2801.12003326416,
        "end": 2806.12003326416,
        "text": " Now let's confirm it with at least a package config command."
    },
    {
        "id": 373,
        "start": 2808.7600326538086,
        "end": 2813.7600326538086,
        "text": " We see that we have 22.11."
    },
    {
        "id": 374,
        "start": 2814.000030517578,
        "end": 2817.000030517578,
        "text": " When we look into its status,"
    },
    {
        "id": 375,
        "start": 2817.000030517578,
        "end": 2822.000030517578,
        "text": " you will see that I clone the BPDK repository"
    },
    {
        "id": 376,
        "start": 2822.8400344848633,
        "end": 2827.8400344848633,
        "text": " and then checked out to the B22.11 branch."
    },
    {
        "id": 377,
        "start": 2828.7600326538086,
        "end": 2832.7600326538086,
        "text": " Or tech, make sure I have BPDK version,"
    },
    {
        "id": 378,
        "start": 2835.320037841797,
        "end": 2837.200035095215,
        "text": " the version that I mentioned."
    },
    {
        "id": 379,
        "start": 2841.320037841797,
        "end": 2842.1600341796875,
        "text": " Okay."
    },
    {
        "id": 380,
        "start": 2844.1600341796875,
        "end": 2846.8400344848633,
        "text": " We see that cbindgen is installed."
    },
    {
        "id": 381,
        "start": 2846.8400344848633,
        "end": 2851.200035095215,
        "text": " So we can essentially bundle out of gen"
    },
    {
        "id": 382,
        "start": 2852.7200317382812,
        "end": 2855.0400314331055,
        "text": " and configure the Srikala."
    },
    {
        "id": 383,
        "start": 2856.0400314331055,
        "end": 2859.640037536621,
        "text": " Basically the steps you've seen previously,"
    },
    {
        "id": 384,
        "start": 2859.640037536621,
        "end": 2861.9600372314453,
        "text": " I'll just quickly go over this."
    },
    {
        "id": 385,
        "start": 2866.8400344848633,
        "end": 2869.200035095215,
        "text": " And then we will compile Srikala."
    },
    {
        "id": 386,
        "start": 2872.560028076172,
        "end": 2874.240036010742,
        "text": " While we wait."
    },
    {
        "id": 387,
        "start": 2876.6800384521484,
        "end": 2877.520034790039,
        "text": " Yay."
    },
    {
        "id": 388,
        "start": 2885.1600341796875,
        "end": 2887.520034790039,
        "text": " So this is configuring."
    },
    {
        "id": 389,
        "start": 2893.8400268554688,
        "end": 2897.9200286865234,
        "text": " We will also do the make command,"
    },
    {
        "id": 390,
        "start": 2897.9200286865234,
        "end": 2901.800033569336,
        "text": " but in this case we'll still not install Srikala"
    },
    {
        "id": 391,
        "start": 2901.800033569336,
        "end": 2905.280029296875,
        "text": " because this kind of save time."
    },
    {
        "id": 392,
        "start": 2907.2000274658203,
        "end": 2909.8400268554688,
        "text": " We see that now our configuration,"
    },
    {
        "id": 393,
        "start": 2909.8400268554688,
        "end": 2914.080032348633,
        "text": " again, we have afp-enabled BPDK support."
    },
    {
        "id": 394,
        "start": 2914.080032348633,
        "end": 2918.9600372314453,
        "text": " That's the thing that we enabled with the enable BPDK."
    },
    {
        "id": 395,
        "start": 2918.9600372314453,
        "end": 2922.3600311279297,
        "text": " And also as we install also the hyperscan,"
    },
    {
        "id": 396,
        "start": 2922.3600311279297,
        "end": 2924.320037841797,
        "text": " we also have it enabled."
    },
    {
        "id": 397,
        "start": 2924.320037841797,
        "end": 2926.6000366210938,
        "text": " So that's why we have it."
    },
    {
        "id": 398,
        "start": 2928.240036010742,
        "end": 2930.320037841797,
        "text": " And now let's compile it."
    },
    {
        "id": 399,
        "start": 2932.6800384521484,
        "end": 2936.320037841797,
        "text": " We have 10 cores on the machine and let's say physical core."
    },
    {
        "id": 400,
        "start": 2936.320037841797,
        "end": 2939.760040283203,
        "text": " So it will be a little quicker than in the virtual machine."
    },
    {
        "id": 401,
        "start": 2944.280029296875,
        "end": 2948.6400299072266,
        "text": " Let's try running BPDK then bind on this machine"
    },
    {
        "id": 402,
        "start": 2948.6400299072266,
        "end": 2952.9600372314453,
        "text": " just to kind of see what's here."
    },
    {
        "id": 403,
        "start": 2954.4800415039062,
        "end": 2959.4800415039062,
        "text": " And again, here we see that network devices"
    },
    {
        "id": 404,
        "start": 2959.6000366210938,
        "end": 2960.9200286865234,
        "text": " using kernel driver."
    },
    {
        "id": 405,
        "start": 2964.6000366210938,
        "end": 2969.6000366210938,
        "text": " We see there is one x710."
    },
    {
        "id": 406,
        "start": 2970.280029296875,
        "end": 2975.280029296875,
        "text": " I didn't reverse all my changes to the default settings."
    },
    {
        "id": 407,
        "start": 2978.760040283203,
        "end": 2982.6400299072266,
        "text": " So that's why it's split in between this,"
    },
    {
        "id": 408,
        "start": 2982.6400299072266,
        "end": 2987.6400299072266,
        "text": " but we see Intel card here with E4PE driver"
    },
    {
        "id": 409,
        "start": 2989.760040283203,
        "end": 2993.800033569336,
        "text": " and then a Mellanox or NVIDIA card"
    },
    {
        "id": 410,
        "start": 2993.800033569336,
        "end": 2997.280029296875,
        "text": " that contains MLX5 driver."
    },
    {
        "id": 411,
        "start": 2998.2000427246094,
        "end": 3002.3600463867188,
        "text": " And this is one interesting thing with Mellanox"
    },
    {
        "id": 412,
        "start": 3002.3600463867188,
        "end": 3004.080047607422,
        "text": " or NVIDIA drivers."
    },
    {
        "id": 413,
        "start": 3005.4000244140625,
        "end": 3008.8800354003906,
        "text": " They have bifurcated drivers."
    },
    {
        "id": 414,
        "start": 3008.8800354003906,
        "end": 3011.280029296875,
        "text": " Essentially these drivers can work"
    },
    {
        "id": 415,
        "start": 3011.280029296875,
        "end": 3013.6000366210938,
        "text": " both with kernel and BPDK."
    },
    {
        "id": 416,
        "start": 3014.6000366210938,
        "end": 3018.6000366210938,
        "text": " The thing I did with the virtual interface"
    },
    {
        "id": 417,
        "start": 3021.52001953125,
        "end": 3026.080047607422,
        "text": " that I was binding it to the IGB driver."
    },
    {
        "id": 418,
        "start": 3026.080047607422,
        "end": 3029.4400329589844,
        "text": " You don't need to do this with Mellanox drivers."
    },
    {
        "id": 419,
        "start": 3029.4400329589844,
        "end": 3032.4800415039062,
        "text": " It will just work directly as is."
    },
    {
        "id": 420,
        "start": 3032.4800415039062,
        "end": 3033.9200439453125,
        "text": " You don't need to do anything."
    },
    {
        "id": 421,
        "start": 3033.9200439453125,
        "end": 3036.7200317382812,
        "text": " However, with Intel drivers,"
    },
    {
        "id": 422,
        "start": 3036.7200317382812,
        "end": 3038.6400451660156,
        "text": " you actually need to rebind it."
    },
    {
        "id": 423,
        "start": 3038.6400451660156,
        "end": 3043.320037841797,
        "text": " So we can try just as a practice,"
    },
    {
        "id": 424,
        "start": 3043.320037841797,
        "end": 3045.000030517578,
        "text": " we can rebind it to,"
    },
    {
        "id": 425,
        "start": 3050.4400329589844,
        "end": 3053.4400329589844,
        "text": " we can try VFIO, but that shouldn't work."
    },
    {
        "id": 426,
        "start": 3056.4800415039062,
        "end": 3058.52001953125,
        "text": " When VFIO is not working,"
    },
    {
        "id": 427,
        "start": 3058.52001953125,
        "end": 3061.52001953125,
        "text": " you can also enable,"
    },
    {
        "id": 428,
        "start": 3068.240020751953,
        "end": 3071.9200439453125,
        "text": " you either bind it to the IGB driver."
    },
    {
        "id": 429,
        "start": 3071.9200439453125,
        "end": 3075.7200317382812,
        "text": " Those are kind of two drivers you can bind it to."
    },
    {
        "id": 430,
        "start": 3075.7200317382812,
        "end": 3077.8400268554688,
        "text": " I don't have the IGB thing."
    },
    {
        "id": 431,
        "start": 3077.8400268554688,
        "end": 3079.240020751953,
        "text": " Nevermind, I will,"
    },
    {
        "id": 432,
        "start": 3079.240020751953,
        "end": 3084.240020751953,
        "text": " UILBCI generic, let's say,"
    },
    {
        "id": 433,
        "start": 3086.9600219726562,
        "end": 3090.080047607422,
        "text": " and I will bind it to that driver."
    },
    {
        "id": 434,
        "start": 3098.240020751953,
        "end": 3100.2000427246094,
        "text": " Essentially to give you some context,"
    },
    {
        "id": 435,
        "start": 3100.2000427246094,
        "end": 3104.9200439453125,
        "text": " you can bind it either to VFIO or UILBCI generic drivers."
    },
    {
        "id": 436,
        "start": 3104.9200439453125,
        "end": 3108.1600341796875,
        "text": " It's preferred to bind it to VFIO,"
    },
    {
        "id": 437,
        "start": 3108.1600341796875,
        "end": 3110.280029296875,
        "text": " but when it's not available,"
    },
    {
        "id": 438,
        "start": 3110.280029296875,
        "end": 3115.280029296875,
        "text": " then I guess it's okay to bind it to UILBCI generic as well."
    },
    {
        "id": 439,
        "start": 3119.6800231933594,
        "end": 3120.8800354003906,
        "text": " Okay, nevermind."
    },
    {
        "id": 440,
        "start": 3123.1200256347656,
        "end": 3125.080047607422,
        "text": " With VFIO, you can,"
    },
    {
        "id": 441,
        "start": 3125.080047607422,
        "end": 3128.52001953125,
        "text": " there is also a certain directive about,"
    },
    {
        "id": 442,
        "start": 3128.52001953125,
        "end": 3131.6400451660156,
        "text": " I think, unsafe MMIO,"
    },
    {
        "id": 443,
        "start": 3132.2000427246094,
        "end": 3134.320037841797,
        "text": " what do you,"
    },
    {
        "id": 444,
        "start": 3134.320037841797,
        "end": 3138.800048828125,
        "text": " basically that this gave us an error"
    },
    {
        "id": 445,
        "start": 3138.800048828125,
        "end": 3142.52001953125,
        "text": " that it cannot be bound to the VFIO,"
    },
    {
        "id": 446,
        "start": 3142.52001953125,
        "end": 3147.52001953125,
        "text": " but with the unsafe VFIO setting,"
    },
    {
        "id": 447,
        "start": 3149.0400390625,
        "end": 3151.760040283203,
        "text": " it would be possible to bind it."
    },
    {
        "id": 448,
        "start": 3152.9200439453125,
        "end": 3157.9200439453125,
        "text": " But now we will work for the sake of demo with MellanoxCard"
    },
    {
        "id": 449,
        "start": 3157.9200439453125,
        "end": 3162.9200439453125,
        "text": " and let's see,"
    },
    {
        "id": 450,
        "start": 3164.4400329589844,
        "end": 3166.760040283203,
        "text": " we have it already compiled."
    },
    {
        "id": 451,
        "start": 3166.760040283203,
        "end": 3168.280029296875,
        "text": " That's nice."
    },
    {
        "id": 452,
        "start": 3168.280029296875,
        "end": 3171.9200439453125,
        "text": " Okay, so we will edit the Serika.yaml file."
    },
    {
        "id": 453,
        "start": 3175.240020751953,
        "end": 3179.6000366210938,
        "text": " As you can see, we have the interface already here."
    },
    {
        "id": 454,
        "start": 3179.6000366210938,
        "end": 3183.240020751953,
        "text": " So I'll set it to, let's say, dot one."
    },
    {
        "id": 455,
        "start": 3184.52001953125,
        "end": 3187.4400329589844,
        "text": " I'll set it to eight workers."
    },
    {
        "id": 456,
        "start": 3188.4800415039062,
        "end": 3192.000030517578,
        "text": " And leave the defaults as are."
    },
    {
        "id": 457,
        "start": 3192.000030517578,
        "end": 3196.000030517578,
        "text": " Now let's try to run it."
    },
    {
        "id": 458,
        "start": 3197.3600463867188,
        "end": 3200.1200256347656,
        "text": " But I think I forgot,"
    },
    {
        "id": 459,
        "start": 3200.1200256347656,
        "end": 3202.0400390625,
        "text": " and let's open the case."
    },
    {
        "id": 460,
        "start": 3202.0400390625,
        "end": 3206.4400329589844,
        "text": " You forgot to allocate probably the huge pages."
    },
    {
        "id": 461,
        "start": 3206.4400329589844,
        "end": 3210.000030517578,
        "text": " Okay, it was doing okay,"
    },
    {
        "id": 462,
        "start": 3210.000030517578,
        "end": 3213.9600219726562,
        "text": " because let me check the huge pages."
    },
    {
        "id": 463,
        "start": 3214.000030517578,
        "end": 3218.6000366210938,
        "text": " I already have it from the prior runs already allocated."
    },
    {
        "id": 464,
        "start": 3218.6000366210938,
        "end": 3219.9600219726562,
        "text": " Okay."
    },
    {
        "id": 465,
        "start": 3219.9600219726562,
        "end": 3221.9600219726562,
        "text": " And let's see."
    },
    {
        "id": 466,
        "start": 3233.6400451660156,
        "end": 3237.6000366210938,
        "text": " Here we see already that we are receiving some texts."
    },
    {
        "id": 467,
        "start": 3237.6000366210938,
        "end": 3238.4400329589844,
        "text": " So that's good."
    },
    {
        "id": 468,
        "start": 3239.0400390625,
        "end": 3239.8800354003906,
        "text": " Okay."
    },
    {
        "id": 469,
        "start": 3243.6000366210938,
        "end": 3244.800048828125,
        "text": " I've essentially"
    },
    {
        "id": 470,
        "start": 3247.800048828125,
        "end": 3252.800048828125,
        "text": " wrapped the stats in the log for capture statistics."
    },
    {
        "id": 471,
        "start": 3254.1200256347656,
        "end": 3256.8800048828125,
        "text": " And I see that capture.packets,"
    },
    {
        "id": 472,
        "start": 3256.8800048828125,
        "end": 3259.1200561523438,
        "text": " it's already receiving some packets,"
    },
    {
        "id": 473,
        "start": 3259.1200561523438,
        "end": 3262.6000366210938,
        "text": " but it's also these categories signal"
    },
    {
        "id": 474,
        "start": 3262.6000366210938,
        "end": 3266.1200561523438,
        "text": " that we are missing a lot of packets."
    },
    {
        "id": 475,
        "start": 3266.1200561523438,
        "end": 3267.8800048828125,
        "text": " And let's see why."
    },
    {
        "id": 476,
        "start": 3268.2400512695312,
        "end": 3271.6400146484375,
        "text": " When we open the performance monitor,"
    },
    {
        "id": 477,
        "start": 3271.6400146484375,
        "end": 3275.1200561523438,
        "text": " we see that only the first score is active."
    },
    {
        "id": 478,
        "start": 3275.1200561523438,
        "end": 3277.3200073242188,
        "text": " And that is simply because"
    },
    {
        "id": 479,
        "start": 3279.3200073242188,
        "end": 3281.3200073242188,
        "text": " we didn't set the CPU affinity."
    },
    {
        "id": 480,
        "start": 3281.3200073242188,
        "end": 3283.0000610351562,
        "text": " That's common fault."
    },
    {
        "id": 481,
        "start": 3284.0000610351562,
        "end": 3287.2400512695312,
        "text": " So you always need to set the CPU affinity."
    },
    {
        "id": 482,
        "start": 3290.1200561523438,
        "end": 3292.2000122070312,
        "text": " So yeah, we set it to yes."
    },
    {
        "id": 483,
        "start": 3292.2000122070312,
        "end": 3293.7200317382812,
        "text": " And we set it to"
    },
    {
        "id": 484,
        "start": 3294.3200073242188,
        "end": 3295.3200073242188,
        "text": " the list of"
    },
    {
        "id": 485,
        "start": 3300.0800170898438,
        "end": 3301.760009765625,
        "text": " cores."
    },
    {
        "id": 486,
        "start": 3301.760009765625,
        "end": 3305.4400634765625,
        "text": " Now I'll explain a bit just in a second,"
    },
    {
        "id": 487,
        "start": 3305.4400634765625,
        "end": 3310.4400634765625,
        "text": " why did I set it to 2468, et cetera."
    },
    {
        "id": 488,
        "start": 3313.2400512695312,
        "end": 3314.800048828125,
        "text": " Let's try it."
    },
    {
        "id": 489,
        "start": 3314.800048828125,
        "end": 3318.0000610351562,
        "text": " And now when we look at the HDOP,"
    },
    {
        "id": 490,
        "start": 3318.0000610351562,
        "end": 3322.4400634765625,
        "text": " we see that it's running on eight cores as it should."
    },
    {
        "id": 491,
        "start": 3322.4400634765625,
        "end": 3327.4400634765625,
        "text": " Now, the way, the reason I kind of set it to eight cores"
    },
    {
        "id": 492,
        "start": 3328.3600463867188,
        "end": 3329.2000122070312,
        "text": " is because"
    },
    {
        "id": 493,
        "start": 3331.1600341796875,
        "end": 3334.52001953125,
        "text": " on multi-CPU systems,"
    },
    {
        "id": 494,
        "start": 3336.0400390625,
        "end": 3339.2400512695312,
        "text": " you want to be on the same NUMA node."
    },
    {
        "id": 495,
        "start": 3339.2400512695312,
        "end": 3342.4000244140625,
        "text": " NUMA node is a non-uniform memory access."
    },
    {
        "id": 496,
        "start": 3342.4000244140625,
        "end": 3343.7200317382812,
        "text": " And that's kind of"
    },
    {
        "id": 497,
        "start": 3346.2000122070312,
        "end": 3350.6000366210938,
        "text": " how it's kind of architected in a way."
    },
    {
        "id": 498,
        "start": 3351.6000366210938,
        "end": 3352.9200439453125,
        "text": " Now, when we look in"
    },
    {
        "id": 499,
        "start": 3355.6000366210938,
        "end": 3357.8400268554688,
        "text": " support slide,"
    },
    {
        "id": 500,
        "start": 3357.8400268554688,
        "end": 3360.1200561523438,
        "text": " this is our server, the green thing."
    },
    {
        "id": 501,
        "start": 3360.1200561523438,
        "end": 3365.1200561523438,
        "text": " And these CPU sockets are your two processors of your server."
    },
    {
        "id": 502,
        "start": 3368.0800170898438,
        "end": 3372.800048828125,
        "text": " When you have a NIC on NUMA node zero,"
    },
    {
        "id": 503,
        "start": 3372.800048828125,
        "end": 3375.56005859375,
        "text": " kind of like on one area,"
    },
    {
        "id": 504,
        "start": 3375.56005859375,
        "end": 3378.6800537109375,
        "text": " you want to interact with the NIC"
    },
    {
        "id": 505,
        "start": 3379.6800537109375,
        "end": 3380.52001953125,
        "text": " with"
    },
    {
        "id": 506,
        "start": 3382.52001953125,
        "end": 3387.52001953125,
        "text": " like CPU sockets or the CPU on that's the same NUMA node"
    },
    {
        "id": 507,
        "start": 3387.7200317382812,
        "end": 3389.9200439453125,
        "text": " or on the same area."
    },
    {
        "id": 508,
        "start": 3389.9200439453125,
        "end": 3394.1200561523438,
        "text": " You don't want to interact it with a CPU,"
    },
    {
        "id": 509,
        "start": 3394.1200561523438,
        "end": 3396.8800048828125,
        "text": " with the second CPU in a different spot"
    },
    {
        "id": 510,
        "start": 3396.8800048828125,
        "end": 3399.3600463867188,
        "text": " because even though you can,"
    },
    {
        "id": 511,
        "start": 3399.3600463867188,
        "end": 3402.52001953125,
        "text": " but there is like CPU interconnect"
    },
    {
        "id": 512,
        "start": 3402.52001953125,
        "end": 3405.8400268554688,
        "text": " or some path that connects your two CPUs together."
    },
    {
        "id": 513,
        "start": 3405.8800048828125,
        "end": 3409.4800415039062,
        "text": " So you can communicate with whatever you want,"
    },
    {
        "id": 514,
        "start": 3409.4800415039062,
        "end": 3414.4800415039062,
        "text": " but it takes a toll because of the remote access."
    },
    {
        "id": 515,
        "start": 3415.280029296875,
        "end": 3416.1200561523438,
        "text": " So"
    },
    {
        "id": 516,
        "start": 3418.2000122070312,
        "end": 3422.2000122070312,
        "text": " my cores on the CPU socket zero are"
    },
    {
        "id": 517,
        "start": 3423.3600463867188,
        "end": 3424.6800537109375,
        "text": " kind of these"
    },
    {
        "id": 518,
        "start": 3427.280029296875,
        "end": 3428.1200561523438,
        "text": " and"
    },
    {
        "id": 519,
        "start": 3429.800048828125,
        "end": 3430.6400146484375,
        "text": " not"
    },
    {
        "id": 520,
        "start": 3430.6400146484375,
        "end": 3434.5600147247314,
        "text": " not the odd, but I think even numbers, yeah."
    },
    {
        "id": 521,
        "start": 3435.5200147628784,
        "end": 3437.200014591217,
        "text": " The same applies to memory."
    },
    {
        "id": 522,
        "start": 3437.200014591217,
        "end": 3442.200015068054,
        "text": " When you start your application on one NUMA node,"
    },
    {
        "id": 523,
        "start": 3443.3600149154663,
        "end": 3448.120014190674,
        "text": " that essentially wants to allocate all its memory"
    },
    {
        "id": 524,
        "start": 3448.120014190674,
        "end": 3452.920015335083,
        "text": " on RAM slots or on memory slots"
    },
    {
        "id": 525,
        "start": 3452.920015335083,
        "end": 3454.5600147247314,
        "text": " that are on the same NUMA node."
    },
    {
        "id": 526,
        "start": 3454.5600147247314,
        "end": 3458.280014038086,
        "text": " That way you can have the fastest access rates"
    },
    {
        "id": 527,
        "start": 3458.280014038086,
        "end": 3460.160015106201,
        "text": " to the memory."
    },
    {
        "id": 528,
        "start": 3462.3200149536133,
        "end": 3464.3200149536133,
        "text": " It's better to occupy all memory."
    },
    {
        "id": 529,
        "start": 3464.3200149536133,
        "end": 3469.2000160217285,
        "text": " So instead of one 64 gigabits memory,"
    },
    {
        "id": 530,
        "start": 3469.2000160217285,
        "end": 3474.2000160217285,
        "text": " you want to probably use eight by eight memory sticks"
    },
    {
        "id": 531,
        "start": 3475.8000144958496,
        "end": 3479.4000129699707,
        "text": " just because more memory channels"
    },
    {
        "id": 532,
        "start": 3479.4000129699707,
        "end": 3481.9200134277344,
        "text": " provides more throughput to your application."
    },
    {
        "id": 533,
        "start": 3482.9200134277344,
        "end": 3487.9200134277344,
        "text": " To kind of speed up a bit,"
    },
    {
        "id": 534,
        "start": 3488.4800148010254,
        "end": 3491.0800132751465,
        "text": " this is kind of the architecture of the demo server"
    },
    {
        "id": 535,
        "start": 3491.0800132751465,
        "end": 3494.120014190674,
        "text": " and the reason why I use the even numbers."
    },
    {
        "id": 536,
        "start": 3495.2400131225586,
        "end": 3500.2400131225586,
        "text": " I was able to determine the CPU cores"
    },
    {
        "id": 537,
        "start": 3501.120018005371,
        "end": 3506.120018005371,
        "text": " of my CPU socket zero from the either this command"
    },
    {
        "id": 538,
        "start": 3506.160011291504,
        "end": 3510.0400161743164,
        "text": " or the LSCPU, which I will show in a bit."
    },
    {
        "id": 539,
        "start": 3511.000015258789,
        "end": 3516.000015258789,
        "text": " I was able to check what memory slots I have occupied"
    },
    {
        "id": 540,
        "start": 3516.000015258789,
        "end": 3521.000015258789,
        "text": " by listing hardware, essentially."
    },
    {
        "id": 541,
        "start": 3521.000015258789,
        "end": 3526.000015258789,
        "text": " And you can also check on which NUMA node your NIC is"
    },
    {
        "id": 542,
        "start": 3527.9600143432617,
        "end": 3532.4400177001953,
        "text": " by kind of looking into this command."
    },
    {
        "id": 543,
        "start": 3532.4400177001953,
        "end": 3536.720016479492,
        "text": " And I kind of found out that the NIC is on NUMA node zeros,"
    },
    {
        "id": 544,
        "start": 3536.720016479492,
        "end": 3541.720016479492,
        "text": " therefore I used CPU zero and I tried to,"
    },
    {
        "id": 545,
        "start": 3543.880012512207,
        "end": 3546.0800170898438,
        "text": " I mean, use as many slots as I could,"
    },
    {
        "id": 546,
        "start": 3546.0800170898438,
        "end": 3550.60001373291,
        "text": " but we still have these slots free."
    },
    {
        "id": 547,
        "start": 3554.120018005371,
        "end": 3558.2000122070312,
        "text": " So from LSCPU, from this command,"
    },
    {
        "id": 548,
        "start": 3558.2000122070312,
        "end": 3562.6400146484375,
        "text": " we see that the reason why I use even numbers"
    },
    {
        "id": 549,
        "start": 3562.6800079345703,
        "end": 3567.6800079345703,
        "text": " for this Suricata run is because they are on the node zero."
    },
    {
        "id": 550,
        "start": 3569.000015258789,
        "end": 3573.52001953125,
        "text": " And I see that we got full emergency"
    },
    {
        "id": 551,
        "start": 3573.52001953125,
        "end": 3576.480010986328,
        "text": " from traffic we are receiving."
    },
    {
        "id": 552,
        "start": 3576.480010986328,
        "end": 3581.480010986328,
        "text": " It doesn't matter because we'll just adjust our settings,"
    },
    {
        "id": 553,
        "start": 3581.9600219726562,
        "end": 3585.560012817383,
        "text": " our Suricata settings a bit to be able to handle"
    },
    {
        "id": 554,
        "start": 3585.560012817383,
        "end": 3590.560012817383,
        "text": " the settings, to be able to handle the traffic as it should."
    },
    {
        "id": 555,
        "start": 3591.4000091552734,
        "end": 3596.4000091552734,
        "text": " Let's see, I'll adjust multiple settings"
    },
    {
        "id": 556,
        "start": 3597.480010986328,
        "end": 3601.1200103759766,
        "text": " just to be sure we're doing fine."
    },
    {
        "id": 557,
        "start": 3608.9600219726562,
        "end": 3612.560012817383,
        "text": " I'll enable stats in parallel to two seconds."
    },
    {
        "id": 558,
        "start": 3620.560012817383,
        "end": 3625.560012817383,
        "text": " Today we will read the stats.log file for our statistics."
    },
    {
        "id": 559,
        "start": 3637.800018310547,
        "end": 3642.800018310547,
        "text": " I'll increase the flow table to more,"
    },
    {
        "id": 560,
        "start": 3643.6400146484375,
        "end": 3648.6400146484375,
        "text": " same number, let's say to eight gigs of RAM memory."
    },
    {
        "id": 561,
        "start": 3651.560012817383,
        "end": 3656.560012817383,
        "text": " I guess we can stay with an edge table size"
    },
    {
        "id": 562,
        "start": 3657.4400177001953,
        "end": 3659.280014038086,
        "text": " for the flow memory,"
    },
    {
        "id": 563,
        "start": 3659.280014038086,
        "end": 3662.3200073242188,
        "text": " but we will pre-allocate all elements there."
    },
    {
        "id": 564,
        "start": 3663.4000091552734,
        "end": 3666.4000091552734,
        "text": " We will also increase the memory"
    },
    {
        "id": 565,
        "start": 3666.4000091552734,
        "end": 3669.040008544922,
        "text": " for the defragmentation engine."
    },
    {
        "id": 566,
        "start": 3677.480010986328,
        "end": 3680.2000122070312,
        "text": " We'll also increase our stream engine."
    },
    {
        "id": 567,
        "start": 3681.1600189208984,
        "end": 3683.280014038086,
        "text": " These are kind of Suricata settings"
    },
    {
        "id": 568,
        "start": 3684.3600158691406,
        "end": 3687.280029296875,
        "text": " that you would encounter in your,"
    },
    {
        "id": 569,
        "start": 3690.52001953125,
        "end": 3693.560028076172,
        "text": " like if packet set up, if you bring set up,"
    },
    {
        "id": 570,
        "start": 3693.560028076172,
        "end": 3695.0,
        "text": " doesn't really matter."
    },
    {
        "id": 571,
        "start": 3695.0,
        "end": 3698.0,
        "text": " So I don't want to spend too much time on this"
    },
    {
        "id": 572,
        "start": 3698.0,
        "end": 3701.6800231933594,
        "text": " and rather focus on DPDK settings only."
    },
    {
        "id": 573,
        "start": 3704.560028076172,
        "end": 3709.040008544922,
        "text": " So yeah, this is the set and okay."
    },
    {
        "id": 574,
        "start": 3709.040008544922,
        "end": 3714.040008544922,
        "text": " And to kind of illustrate the bugs that you can encounter"
    },
    {
        "id": 575,
        "start": 3714.6000061035156,
        "end": 3718.4400024414062,
        "text": " or not the bugs, but rather error counters"
    },
    {
        "id": 576,
        "start": 3718.4400024414062,
        "end": 3722.0,
        "text": " that you can encounter with DPDK,"
    },
    {
        "id": 577,
        "start": 3722.0,
        "end": 3727.0,
        "text": " I'll set it to DPDK to, let's say low settings"
    },
    {
        "id": 578,
        "start": 3729.4000244140625,
        "end": 3732.6000061035156,
        "text": " so that DPDK will be actually the bottleneck"
    },
    {
        "id": 579,
        "start": 3732.6000061035156,
        "end": 3734.480010986328,
        "text": " of the Suricata."
    },
    {
        "id": 580,
        "start": 3735.480010986328,
        "end": 3739.4000244140625,
        "text": " These are rather small settings."
    },
    {
        "id": 581,
        "start": 3739.4000244140625,
        "end": 3743.040008544922,
        "text": " I'm kind of ignoring the recommended sizes"
    },
    {
        "id": 582,
        "start": 3743.040008544922,
        "end": 3745.4000244140625,
        "text": " that are described here,"
    },
    {
        "id": 583,
        "start": 3745.4000244140625,
        "end": 3747.3600158691406,
        "text": " just to illustrate what kind of errors"
    },
    {
        "id": 584,
        "start": 3747.3600158691406,
        "end": 3749.1600036621094,
        "text": " that you can encounter."
    },
    {
        "id": 585,
        "start": 3750.9200134277344,
        "end": 3755.9200134277344,
        "text": " Okay, so now we have Suricata configured."
    },
    {
        "id": 586,
        "start": 3756.1200256347656,
        "end": 3757.4400024414062,
        "text": " We can try to run it."
    },
    {
        "id": 587,
        "start": 3761.040008544922,
        "end": 3763.4400024414062,
        "text": " And let's see."
    },
    {
        "id": 588,
        "start": 3765.480010986328,
        "end": 3769.52001953125,
        "text": " Okay, we are seeing essentially two different"
    },
    {
        "id": 589,
        "start": 3772.6800231933594,
        "end": 3774.040008544922,
        "text": " error counters."
    },
    {
        "id": 590,
        "start": 3774.040008544922,
        "end": 3777.9600219726562,
        "text": " And one is I missed and the other is no embufs."
    },
    {
        "id": 591,
        "start": 3777.9600219726562,
        "end": 3782.9600219726562,
        "text": " No embufs means that you don't have any embuf,"
    },
    {
        "id": 592,
        "start": 3783.2000122070312,
        "end": 3788.2000122070312,
        "text": " meaning like packet representation in your software"
    },
    {
        "id": 593,
        "start": 3789.3600158691406,
        "end": 3792.800018310547,
        "text": " available when your card needs it."
    },
    {
        "id": 594,
        "start": 3792.8800048828125,
        "end": 3795.4400024414062,
        "text": " So packet arrives to the card"
    },
    {
        "id": 595,
        "start": 3795.4400024414062,
        "end": 3800.2000122070312,
        "text": " and now the card needs to push it to Suricata,"
    },
    {
        "id": 596,
        "start": 3800.2000122070312,
        "end": 3804.8400268554688,
        "text": " but there are no available kind of objects"
    },
    {
        "id": 597,
        "start": 3804.8400268554688,
        "end": 3809.8400268554688,
        "text": " in which the network card can put the packet to."
    },
    {
        "id": 598,
        "start": 3809.9200134277344,
        "end": 3814.0,
        "text": " So this error counter is complaining about that."
    },
    {
        "id": 599,
        "start": 3814.0,
        "end": 3819.0,
        "text": " And I missed error counter is complaining"
    },
    {
        "id": 600,
        "start": 3820.0,
        "end": 3825.0,
        "text": " that the error, that's essentially the queue"
    },
    {
        "id": 601,
        "start": 3826.1600036621094,
        "end": 3831.1600036621094,
        "text": " in the network, like the network interface card"
    },
    {
        "id": 602,
        "start": 3832.9200134277344,
        "end": 3837.9200134277344,
        "text": " is so overloaded that it cannot even parse the packet"
    },
    {
        "id": 603,
        "start": 3838.760009765625,
        "end": 3842.0,
        "text": " or it cannot even process the packet."
    },
    {
        "id": 604,
        "start": 3842.0,
        "end": 3844.280029296875,
        "text": " So it must be dropped."
    },
    {
        "id": 605,
        "start": 3844.280029296875,
        "end": 3846.800018310547,
        "text": " And now we'll focus on the no embufs"
    },
    {
        "id": 606,
        "start": 3846.8400268554688,
        "end": 3849.3200073242188,
        "text": " because it's quite easy to fix."
    },
    {
        "id": 607,
        "start": 3849.3200073242188,
        "end": 3854.3200073242188,
        "text": " You will just, we will just increase the mempool size."
    },
    {
        "id": 608,
        "start": 3858.1600036621094,
        "end": 3863.1600036621094,
        "text": " We will increase it essentially to,"
    },
    {
        "id": 609,
        "start": 3869.040008544922,
        "end": 3872.720001220703,
        "text": " let's say to a bigger value."
    },
    {
        "id": 610,
        "start": 3872.720001220703,
        "end": 3875.760009765625,
        "text": " We will also increase mempool cache size."
    },
    {
        "id": 611,
        "start": 3875.760009765625,
        "end": 3880.760009765625,
        "text": " This mempool cache size is cache that each core has."
    },
    {
        "id": 612,
        "start": 3880.800018310547,
        "end": 3883.6400146484375,
        "text": " So in your original mempool,"
    },
    {
        "id": 613,
        "start": 3883.6400146484375,
        "end": 3886.2000122070312,
        "text": " you need to have at least as many elements"
    },
    {
        "id": 614,
        "start": 3886.2000122070312,
        "end": 3891.2000122070312,
        "text": " as number of cores times cache size."
    },
    {
        "id": 615,
        "start": 3892.280029296875,
        "end": 3896.1200256347656,
        "text": " In our case, eight by 500, it's something like 4,000."
    },
    {
        "id": 616,
        "start": 3896.1200256347656,
        "end": 3899.4400024414062,
        "text": " So we have enough for that."
    },
    {
        "id": 617,
        "start": 3899.4400024414062,
        "end": 3904.4400024414062,
        "text": " And it also applies to our receive"
    },
    {
        "id": 618,
        "start": 3904.560028076172,
        "end": 3906.4000244140625,
        "text": " and transmit descriptors."
    },
    {
        "id": 619,
        "start": 3906.4000244140625,
        "end": 3908.1600036621094,
        "text": " I usually set it to the same value"
    },
    {
        "id": 620,
        "start": 3908.1600036621094,
        "end": 3910.6000061035156,
        "text": " even though we are only in IDS mode."
    },
    {
        "id": 621,
        "start": 3911.560028076172,
        "end": 3915.0800170898438,
        "text": " It doesn't really hurt to have it allocated that way."
    },
    {
        "id": 622,
        "start": 3917.3200073242188,
        "end": 3919.6000061035156,
        "text": " And now let's see our stats."
    },
    {
        "id": 623,
        "start": 3923.480010986328,
        "end": 3924.8400268554688,
        "text": " Okay."
    },
    {
        "id": 624,
        "start": 3924.8400268554688,
        "end": 3929.1600036621094,
        "text": " It seems like by increasing our mempool size"
    },
    {
        "id": 625,
        "start": 3929.1600036621094,
        "end": 3934.0800170898438,
        "text": " and increasing the receive transmit descriptors,"
    },
    {
        "id": 626,
        "start": 3934.720001220703,
        "end": 3939.040008544922,
        "text": " we were able to eliminate the no embufs counters."
    },
    {
        "id": 627,
        "start": 3939.040008544922,
        "end": 3944.0400390625,
        "text": " And now what you can do is also try to increase it even more"
    },
    {
        "id": 628,
        "start": 3945.9200439453125,
        "end": 3949.0,
        "text": " to maybe even provide a bigger buffer"
    },
    {
        "id": 629,
        "start": 3949.0,
        "end": 3950.9200439453125,
        "text": " for Serikata to process packets."
    },
    {
        "id": 630,
        "start": 3952.239990234375,
        "end": 3954.7999877929688,
        "text": " So yeah, let's try it."
    },
    {
        "id": 631,
        "start": 3958.9600219726562,
        "end": 3961.6000366210938,
        "text": " There is one thing that I would like to point out"
    },
    {
        "id": 632,
        "start": 3961.6000366210938,
        "end": 3966.0400390625,
        "text": " and that is with this,"
    },
    {
        "id": 633,
        "start": 3966.0400390625,
        "end": 3969.2000122070312,
        "text": " you have a much smaller drop rate."
    },
    {
        "id": 634,
        "start": 3977.1199951171875,
        "end": 3980.8400268554688,
        "text": " But with the drops here,"
    },
    {
        "id": 635,
        "start": 3980.8400268554688,
        "end": 3985.8400268554688,
        "text": " it's somehow more like bigger percentage of drops."
    },
    {
        "id": 636,
        "start": 3986.7200317382812,
        "end": 3991.4400024414062,
        "text": " And that's kind of a bit misleading, I know,"
    },
    {
        "id": 637,
        "start": 3992.280029296875,
        "end": 3994.0,
        "text": " but when you are evaluating your setup,"
    },
    {
        "id": 638,
        "start": 3994.0,
        "end": 3998.0400390625,
        "text": " you should really focus on these statistics"
    },
    {
        "id": 639,
        "start": 3998.0400390625,
        "end": 4001.0800170898438,
        "text": " and not so much on these,"
    },
    {
        "id": 640,
        "start": 4001.0800170898438,
        "end": 4004.0800170898438,
        "text": " because these can get a bit pop."
    },
    {
        "id": 641,
        "start": 4006.6000366210938,
        "end": 4009.3200073242188,
        "text": " As you are cutting down Serikata,"
    },
    {
        "id": 642,
        "start": 4009.3200073242188,
        "end": 4012.6799926757812,
        "text": " the NIC still can receive some packets"
    },
    {
        "id": 643,
        "start": 4012.6799926757812,
        "end": 4015.4000244140625,
        "text": " while Serikata is not receiving any."
    },
    {
        "id": 644,
        "start": 4015.4000244140625,
        "end": 4019.6000366210938,
        "text": " And that's why drops are kind of in a bigger."
    },
    {
        "id": 645,
        "start": 4021.6400146484375,
        "end": 4023.52001953125,
        "text": " They can get bigger than they should."
    },
    {
        "id": 646,
        "start": 4025.1600341796875,
        "end": 4030.1600341796875,
        "text": " Okay, so, and now we want to increase the mempool even more,"
    },
    {
        "id": 647,
        "start": 4034.4000244140625,
        "end": 4039.4000244140625,
        "text": " let's say to 16, 16K."
    },
    {
        "id": 648,
        "start": 4040.8400268554688,
        "end": 4043.52001953125,
        "text": " We will leave mempool page as is,"
    },
    {
        "id": 649,
        "start": 4043.52001953125,
        "end": 4048.52001953125,
        "text": " because usually 511 is the maximum number,"
    },
    {
        "id": 650,
        "start": 4048.9200439453125,
        "end": 4053.6000366210938,
        "text": " or 512 is the maximum number you can set"
    },
    {
        "id": 651,
        "start": 4053.6000366210938,
        "end": 4057.6400146484375,
        "text": " for your mempool cache size."
    },
    {
        "id": 652,
        "start": 4058.8800048828125,
        "end": 4063.8800048828125,
        "text": " And unless you change it during the build time."
    },
    {
        "id": 653,
        "start": 4065.8400268554688,
        "end": 4070.6000366210938,
        "text": " Okay, we've increased our mempool."
    },
    {
        "id": 654,
        "start": 4072.6400146484375,
        "end": 4075.1600341796875,
        "text": " These missed errors, again,"
    },
    {
        "id": 655,
        "start": 4075.1600341796875,
        "end": 4079.4400024414062,
        "text": " these are because as you are starting your device,"
    },
    {
        "id": 656,
        "start": 4079.4400024414062,
        "end": 4081.4000244140625,
        "text": " you started your NIC,"
    },
    {
        "id": 657,
        "start": 4081.4000244140625,
        "end": 4085.1199951171875,
        "text": " but Serikata yet still wasn't receiving packets."
    },
    {
        "id": 658,
        "start": 4085.1199951171875,
        "end": 4089.7200317382812,
        "text": " And that's why there are still a bit of missed packets."
    },
    {
        "id": 659,
        "start": 4089.7200317382812,
        "end": 4094.0800170898438,
        "text": " But as you can see, uptime is increasing,"
    },
    {
        "id": 660,
        "start": 4094.0800170898438,
        "end": 4099.080017089844,
        "text": " but we are still having the same amount of missed packets."
    },
    {
        "id": 661,
        "start": 4099.8800048828125,
        "end": 4103.239990234375,
        "text": " Here we counted a few up there,"
    },
    {
        "id": 662,
        "start": 4103.280029296875,
        "end": 4105.600036621094,
        "text": " but it's staying in place."
    },
    {
        "id": 663,
        "start": 4105.600036621094,
        "end": 4108.600036621094,
        "text": " So let's say we could like,"
    },
    {
        "id": 664,
        "start": 4108.600036621094,
        "end": 4111.4000244140625,
        "text": " we can say that we basically configured Serikata"
    },
    {
        "id": 665,
        "start": 4111.4000244140625,
        "end": 4116.4000244140625,
        "text": " for this network in terms of the PDK settings."
    },
    {
        "id": 666,
        "start": 4118.280029296875,
        "end": 4119.1199951171875,
        "text": " Okay."
    },
    {
        "id": 667,
        "start": 4119.1199951171875,
        "end": 4131.1199951171875,
        "text": " So, like, general tuning tips, you can try bigger settings, lower settings."
    },
    {
        "id": 668,
        "start": 4131.1199951171875,
        "end": 4148.1199951171875,
        "text": " It's up to you. Try it as you can. Generally speaking, bigger mempool and more descriptors will lead to more, let's say, cache misses, but it might just provide"
    },
    {
        "id": 669,
        "start": 4148.1199951171875,
        "end": 4164.1199951171875,
        "text": " a buffer for you. Another thing that I wanted to point out, when you have verbose logging enabled, when you are shutting down Srigata, you have extended statistics of your Srigata."
    },
    {
        "id": 670,
        "start": 4164.1199951171875,
        "end": 4180.1199951171875,
        "text": " Here we can see that basically the NIC directly received X amount of packets. We can see on individual queues of the NIC how many packets it has received."
    },
    {
        "id": 671,
        "start": 4180.1199951171875,
        "end": 4198.1199951171875,
        "text": " Unicast, packets, multicast, broadcast, everything. And here you see that out of buffer, essentially, that was the error counter for Srigata when NIC was overloaded and couldn't really process any more traffic."
    },
    {
        "id": 672,
        "start": 4198.1199951171875,
        "end": 4201.1199951171875,
        "text": " Okay."
    },
    {
        "id": 673,
        "start": 4201.1199951171875,
        "end": 4202.1199951171875,
        "text": " Lucas?"
    },
    {
        "id": 674,
        "start": 4202.1199951171875,
        "end": 4204.1199951171875,
        "text": " Yes, Juliana."
    },
    {
        "id": 675,
        "start": 4204.1199951171875,
        "end": 4224.1199951171875,
        "text": " Sorry for interrupting you. We are a bit over the time. I wanted to know if there are any very important things that you want to say or just suggest that we wrap up so we can read the questions. Is that possible?"
    },
    {
        "id": 676,
        "start": 4224.1199951171875,
        "end": 4227.1199951171875,
        "text": " Sure thing."
    },
    {
        "id": 677,
        "start": 4227.1199951171875,
        "end": 4249.1199951171875,
        "text": " Just quickly go over the frequently asked questions. I think it's very much described in the points itself. I'll just try to go over the questions itself to make sure I point out something very important."
    },
    {
        "id": 678,
        "start": 4249.1199951171875,
        "end": 4254.1199951171875,
        "text": " Yeah, okay. That's fine."
    },
    {
        "id": 679,
        "start": 4254.1199951171875,
        "end": 4262.1199951171875,
        "text": " Yeah, let's, let's see. Let's see what the questions are. And"
    },
    {
        "id": 680,
        "start": 4262.1199951171875,
        "end": 4269.1199951171875,
        "text": " then we might just go over the frequently asked questions, just in case we have some time extra."
    },
    {
        "id": 681,
        "start": 4269.1199951171875,
        "end": 4278.1199951171875,
        "text": " All right, so let's see. The first question was from Michael Salka, Salka Singh."
    },
    {
        "id": 682,
        "start": 4278.1199951171875,
        "end": 4296.1199951171875,
        "text": " Okay, the question is, what is your experience in running the DPDK Srigata in cloud SNN like as you and AWS, both supporting the PDK."
    },
    {
        "id": 683,
        "start": 4297.1199951171875,
        "end": 4313.1199951171875,
        "text": " I haven't been able to test it. I haven't had a chance to test it directly in cloud environments, meaning AWS or Azure or services like this."
    },
    {
        "id": 684,
        "start": 4313.1199951171875,
        "end": 4323.1199951171875,
        "text": " But as I tested it with, with virtual interfaces, it works, and it should work there."
    },
    {
        "id": 685,
        "start": 4323.1199951171875,
        "end": 4327.1199951171875,
        "text": " If not, we are accepting PRs."
    },
    {
        "id": 686,
        "start": 4328.1199951171875,
        "end": 4347.1199951171875,
        "text": " We are always happy for contributions, but yeah, it should work in the virtualized environments as well. Although it's good to note that, let's say I tried it in virtualbox, and that allowed me only one view to be enabled."
    },
    {
        "id": 687,
        "start": 4347.1199951171875,
        "end": 4359.1199951171875,
        "text": " That essentially means you can have only one Srigata worker enabled as now, which can be a bit limiting in virtualized environments."
    },
    {
        "id": 688,
        "start": 4359.1199951171875,
        "end": 4377.1199951171875,
        "text": " I would also invite anyone who has experience in running Srigata and DPDK on cloud environments to reach out to us, maybe we could set up a webinar to see how that works and discuss that more."
    },
    {
        "id": 689,
        "start": 4377.1199951171875,
        "end": 4380.1199951171875,
        "text": " Okay, moving on to the next question."
    },
    {
        "id": 690,
        "start": 4380.1199951171875,
        "end": 4396.1199951171875,
        "text": " I might just add a little note that I kind of, it's good to know that with DPDK, you cannot use arbitrary NIC. This is the first point."
    },
    {
        "id": 691,
        "start": 4397.1199951171875,
        "end": 4404.1199951171875,
        "text": " It needs to be like DPDK supported NIC and that can be found, let's say on this page."
    },
    {
        "id": 692,
        "start": 4404.1199951171875,
        "end": 4425.1199951171875,
        "text": " Essentially, some old hardware or some desktop network cards will just probably not work with DPDK if they are not supported. And that can apply either to virtual environments or physical environments as well."
    },
    {
        "id": 693,
        "start": 4425.1199951171875,
        "end": 4432.1199951171875,
        "text": " That's very important and it is indeed a question that we get sometimes in our chat."
    },
    {
        "id": 694,
        "start": 4432.1199951171875,
        "end": 4441.1199951171875,
        "text": " Folks, the slides will be available so if you want any of the information that is there you'll be able to copy it later on."
    },
    {
        "id": 695,
        "start": 4441.1199951171875,
        "end": 4448.1199951171875,
        "text": " Moving on to the next question from Vinay Reddy."
    },
    {
        "id": 696,
        "start": 4448.1199951171875,
        "end": 4465.1199951171875,
        "text": " How would one leverage Intel DPDK if the performance gain is mere 10 to 20%. Is it worth the effort, like cost versus benefit?"
    },
    {
        "id": 697,
        "start": 4465.1199951171875,
        "end": 4468.1199951171875,
        "text": " I mean, I guess it depends."
    },
    {
        "id": 698,
        "start": 4468.1199951171875,
        "end": 4478.1199951171875,
        "text": " If you have a lot of deployments where you can utilize the DPDK experience, then probably yes."
    },
    {
        "id": 699,
        "start": 4478.1199951171875,
        "end": 4496.1199951171875,
        "text": " If you have a single deployment, which you care about, and the AF packet is running just fine, then probably, yeah, DPDK can encompass a lot of stuff that's connected to it."
    },
    {
        "id": 700,
        "start": 4496.1199951171875,
        "end": 4513.1199951171875,
        "text": " So that might not be the case, but if you are having, let's say, more deployments, then it can save you some hardware."
    },
    {
        "id": 701,
        "start": 4513.1199951171875,
        "end": 4523.1199951171875,
        "text": " You can essentially use the hardware for a longer time, considering you can squeeze out more performance."
    },
    {
        "id": 702,
        "start": 4523.1199951171875,
        "end": 4531.1199951171875,
        "text": " But it's also good to know that it depends on the performance benefits on the actual deployment."
    },
    {
        "id": 703,
        "start": 4531.1199951171875,
        "end": 4542.1199951171875,
        "text": " I don't think it's really hard to try. As you've seen, we were able to set up two deployments with DPDK in just about under an hour."
    },
    {
        "id": 704,
        "start": 4543.1199951171875,
        "end": 4566.1199951171875,
        "text": " I think it's good to try, but on your setup, if you have a single deployment, probably you don't need to care that much, but if you have more deployments, then sure, go for it."
    },
    {
        "id": 705,
        "start": 4566.1199951171875,
        "end": 4571.1199951171875,
        "text": " I hope I answered the question."
    },
    {
        "id": 706,
        "start": 4571.1199951171875,
        "end": 4575.1199951171875,
        "text": " If not, please folks, let us know."
    },
    {
        "id": 707,
        "start": 4575.1199951171875,
        "end": 4588.1199951171875,
        "text": " So, someone, Balakhandran Sivakumar asked about the virtual environment. What was the virtual NIC that you were using, the driver?"
    },
    {
        "id": 708,
        "start": 4588.1199951171875,
        "end": 4594.1199951171875,
        "text": " If it was virtio or something with sriov?"
    },
    {
        "id": 709,
        "start": 4594.1199951171875,
        "end": 4599.1199951171875,
        "text": " Yeah, it was virtio."
    },
    {
        "id": 710,
        "start": 4599.1199951171875,
        "end": 4612.1199951171875,
        "text": " I think you can see my virtual box manager. And within that, it was just, oh, so it was just the 8000 environment by default."
    },
    {
        "id": 711,
        "start": 4612.1199951171875,
        "end": 4622.1199951171875,
        "text": " But I also tried it with virtio as the adapter type, and it was also working like that as well."
    },
    {
        "id": 712,
        "start": 4622.1199951171875,
        "end": 4630.1199951171875,
        "text": " Thank you. I saw that the person got the answer, but I wanted everyone to have it, so that's it."
    },
    {
        "id": 713,
        "start": 4630.1199951171875,
        "end": 4642.1199951171875,
        "text": " And Sophie Bernier says, I've seen one of your previous presentations where you talked about the architecture of DPDK support in Suricata."
    },
    {
        "id": 714,
        "start": 4642.1199951171875,
        "end": 4651.1199951171875,
        "text": " At the time, you were using DPDK multiprocess support. Is this what you're still using in this demo?"
    },
    {
        "id": 715,
        "start": 4651.1199951171875,
        "end": 4671.1199951171875,
        "text": " No, that's part of my PhD work, and that was connected with DPDK pre-filter, in which DPDK pre-filter is the primary application, and Suricata is the secondary application."
    },
    {
        "id": 716,
        "start": 4671.1199951171875,
        "end": 4688.1199951171875,
        "text": " Multiprocess support is not directly supported in Suricata 7.0. That's kind of my custom branch, let's say, my experimental branch."
    },
    {
        "id": 717,
        "start": 4688.1199951171875,
        "end": 4716.1199951171875,
        "text": " I can refer you to the implementation where secondary process is supported, but it's in the development. But if it can help anybody, then I can surely link it."
    },
    {
        "id": 718,
        "start": 4716.1199951171875,
        "end": 4727.1199951171875,
        "text": " It would be in between."
    },
    {
        "id": 719,
        "start": 4727.1199951171875,
        "end": 4750.1199951171875,
        "text": " So it's this branch, 5203. I guess it's better to reach out to me and I'll talk to you in more detail. Whether it supports what you want, it's probably better that way."
    },
    {
        "id": 720,
        "start": 4750.1199951171875,
        "end": 4771.1199951171875,
        "text": " Good, makes sense. And folks, you can find Lukas in our forum, on Twitter, and on Discord as well. So for our last question, Andre10Beamer asks, is it possible to bypass traffic with DPDK like eBPF does for Suricata?"
    },
    {
        "id": 721,
        "start": 4772.1199951171875,
        "end": 4792.1199951171875,
        "text": " Yeah, that's kind of, honestly, that kind of like, it was kind of a bit confusing for me. But currently, you bypass the traffic directly in your Suricata."
    },
    {
        "id": 722,
        "start": 4792.1199951171875,
        "end": 4804.1199951171875,
        "text": " Now, is that different from eBPF? eBPF basically sits somewhere in this link driver. And that's like the first place that receives the traffic, let's say."
    },
    {
        "id": 723,
        "start": 4804.1199951171875,
        "end": 4809.879995346069,
        "text": " you essentially skip all this and so the packets go almost directly to your application. So"
    },
    {
        "id": 724,
        "start": 4810.679995059967,
        "end": 4819.1599950790405,
        "text": " kind of having something like eBPF doesn't make much sense in dpdk. However, with like possible"
    },
    {
        "id": 725,
        "start": 4820.999994277954,
        "end": 4831.239995956421,
        "text": " future additions that you can be done to dpdk with dpdk support is that dpdk have"
    },
    {
        "id": 726,
        "start": 4831.239995956421,
        "end": 4841.639995574951,
        "text": " very good hardware support and with dpdk you could potentially insert hardware rules to the"
    },
    {
        "id": 727,
        "start": 4841.639995574951,
        "end": 4857.239994049072,
        "text": " NIC directly and that NIC would directly bypass the traffic for you. Some NICs support this with"
    },
    {
        "id": 728,
        "start": 4857.239994049072,
        "end": 4871.719993591309,
        "text": " eBPF like I think it's, I think it starts with M doesn't matter but with dpdk that would probably"
    },
    {
        "id": 729,
        "start": 4872.679992675781,
        "end": 4878.519996643066,
        "text": " like this hardware bypass would be supported on a much broader scale of NICs."
    },
    {
        "id": 730,
        "start": 4878.519996643066,
        "end": 4893.2399978637695,
        "text": " I'm trying yeah I guess we can we can go on for the next question I'm just trying to"
    },
    {
        "id": 731,
        "start": 4895.2399978637695,
        "end": 4896.279998779297,
        "text": " that was the last one"
    },
    {
        "id": 732,
        "start": 4897.2399978637695,
        "end": 4906.679992675781,
        "text": " thank you and it's almost my time it's almost 3 30 so this was a very long webinar for"
    },
    {
        "id": 733,
        "start": 4908.279998779297,
        "end": 4914.439994812012,
        "text": " as far as Rekata webinars go. Yeah too bad it's that short"
    },
    {
        "id": 734,
        "start": 4917.959991455078,
        "end": 4923.639991760254,
        "text": " all right and I cannot find the direct support but the one when they're basically supported"
    },
    {
        "id": 735,
        "start": 4923.639991760254,
        "end": 4930.199996948242,
        "text": " eBPF in directly in hardware but with dpdk potentially yeah we can support more NICs"
    },
    {
        "id": 736,
        "start": 4930.199996948242,
        "end": 4935.879989624023,
        "text": " however this hardware bypass is not yet supported."
    },
    {
        "id": 737,
        "start": 4939.0,
        "end": 4946.440002441406,
        "text": " All right so yeah we'll have the slides available to all of you."
    },
    {
        "id": 738,
        "start": 4947.399993896484,
        "end": 4954.039993286133,
        "text": " I hope I've passed as much knowledge as I could in that hour and all"
    },
    {
        "id": 739,
        "start": 4956.039993286133,
        "end": 4965.0,
        "text": " and I'll just I guess pass word to you Juliana. Thank you if you could allow me to have my camera"
    },
    {
        "id": 740,
        "start": 4965.0,
        "end": 4972.679992675781,
        "text": " so I can talk to everyone and to say goodbye to our audience. Sure thing."
    },
    {
        "id": 741,
        "start": 4976.440002441406,
        "end": 4987.239990234375,
        "text": " No if I only could well if you can't then I'll be just maybe yeah yeah"
    },
    {
        "id": 742,
        "start": 4992.679992675781,
        "end": 4998.599990844727,
        "text": " so folks no sorry no camera for you it's fine thanks a lot for"
    },
    {
        "id": 743,
        "start": 4998.919998168945,
        "end": 5006.440002441406,
        "text": " joining us today thanks to everyone who stayed this long. I didn't want to"
    },
    {
        "id": 744,
        "start": 5007.559997558594,
        "end": 5012.360000610352,
        "text": " interrupt Lucas earlier because I know there's a lot of information to be shared"
    },
    {
        "id": 745,
        "start": 5013.0,
        "end": 5021.15998840332,
        "text": " and this will be available as I said on our YouTube channel so be sure to check it if you"
    },
    {
        "id": 746,
        "start": 5022.1199951171875,
        "end": 5028.1199951171875,
        "text": " want to check any details if you couldn't stay until the end it will be there."
    },
    {
        "id": 747,
        "start": 5029.479995727539,
        "end": 5038.440002441406,
        "text": " As usual if you have any other questions do share them on our forum which is forum.suricata.io"
    },
    {
        "id": 748,
        "start": 5039.31999206543,
        "end": 5048.599990844727,
        "text": " right and we also have the discord channel server so do join us there if you have webinar ideas"
    },
    {
        "id": 749,
        "start": 5048.599990844727,
        "end": 5057.31999206543,
        "text": " if you have questions if you want to contribute to Suricata anything we are there we we want to"
    },
    {
        "id": 750,
        "start": 5057.31999206543,
        "end": 5070.1199951171875,
        "text": " hear from you. We will also have another webinar from with Mr. Peter Menev in May the 4th be with"
    },
    {
        "id": 751,
        "start": 5070.1199951171875,
        "end": 5081.0,
        "text": " you and and yeah join us for this next one which will be less developer oriented or"
    },
    {
        "id": 752,
        "start": 5082.3599853515625,
        "end": 5089.239990234375,
        "text": " setup oriented and will be about threat hunting. Thanks a lot again thanks for the questions"
    },
    {
        "id": 753,
        "start": 5091.079986572266,
        "end": 5098.839996337891,
        "text": " keep reaching out to us for future ideas for webinar ideas we exist because the community"
    },
    {
        "id": 754,
        "start": 5098.839996337891,
        "end": 5106.679992675781,
        "text": " exists. Thanks Lucas for putting this all together and thank you see you another time folks"
    },
    {
        "id": 755,
        "start": 5107.239990234375,
        "end": 5111.320007324219,
        "text": " that's it for today. Bye-bye."
    }
]